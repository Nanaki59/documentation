{"version":3,"sources":["webpack:///../public/images/kerberos-storage-architecture-kubernetes-cloud.png","webpack:///../src/storage/installation.mdx","webpack:///../public/images/kerberos-storage-architecture-kubernetes-edge.png","webpack:///../public/images/kerberos-enterprise-kubernetes.png"],"names":["module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","alt","src","require","parentName","isMDXComponent"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,8F,mcCOpC,IAAMC,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,gTACA,sfACA,qBAAG,mBAAKC,IAAI,wBAAwBC,IAAKC,EAAQ,WACjD,ueACA,iBAAQ,CACN,GAAM,iDADR,iDAGA,2YAA0X,0BAAYC,WAAW,KAAvB,iBAA1X,cACA,qBAAG,mBAAKH,IAAI,0BAA0BC,IAAKC,EAAQ,WACnD,qFAAoE,mBAAGC,WAAW,KAAQ,CACtF,KAAQ,gCADwD,kDAApE,KAGA,iBAAQ,CACN,GAAM,8CADR,8CAGA,8XACA,qBAAG,mBAAKH,IAAI,0BAA0BC,IAAKC,EAAQ,WACnD,2SACA,oFAAmE,mBAAGC,WAAW,KAAQ,CACrF,KAAQ,+BADuD,kDAAnE,W,4MAOJP,EAAWQ,gBAAiB,G,qBCtD5Bd,EAAOC,QAAU,IAA0B,6F,qBCA3CD,EAAOC,QAAU,IAA0B","file":"component---src-storage-installation-mdx-8306607283ca784990f0.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/kerberos-storage-architecture-kubernetes-cloud-7bd0848c172dd4fbdd13711a29f8bd8d.png\";","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport ReplaceVersion from \"../components/ReplaceVersion\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <p>{`Just like Kerberos Enterprise, Kerberos Storage can be installed where Kubernetes can be installed. This means that it can run at the Edge - Baremetal -, in the cloud - VMs - or at Kubernetes service providers - SAAS - such as GCP, Azure, AWS, DigitalOcean, and the list goes on.`}</p>\n    <p>{`Although you might except Kubernetes at the Edge or Kubernetes in the cloud, there are no differences, well sorry to say there are. As Kubernetes service providers implemented features such as LoadBalancers, Persistent Volumes, and others, they have automated and integrated a huge portion of the Kubernetes stack with their related PAAS services. To be more concrete if you are running a Kubernetes Cluster on GCP, you will use the LoadBalancing and Storage services from GCP.`}</p>\n    <p><img alt=\"enterprise kubernetes\" src={require(\"../../public/images/kerberos-enterprise-kubernetes.png\")} /></p>\n    <p>{`Compared to Kubernetes at the Edge, there are no predefined LoadBalancers, Storage capabilities, and more. This means more administration work for you, but - with great power comes great responsibility - so no worries. In the end there are alternative functionalties available, for features which you find out-of-the-box at the Kubernetes service providers, you just have to spend more time on configuring and installing those services/pods/deployments yourself.`}</p>\n    <h2 {...{\n      \"id\": \"installation-on-a-kubernetes-service-provider\"\n    }}>{`Installation on a Kubernetes Service Provider`}</h2>\n    <p>{`Installing Kerberos Storage, just like Kerberos Enterprise, on a Kubernetes Service Provider (Azure, GCP, AWS) is straight forward, as you can create a Kubernetes cluster in a few clicks, get access to public Load Balancers, storage and more. Running Kerberos Storage in such a cluster is just a matter of copy-pasting some configuration (yaml) files, and executing some `}<inlineCode parentName=\"p\">{`kubectl apply`}</inlineCode>{` commands.`}</p>\n    <p><img alt=\"architecture kubernetes\" src={require(\"../../public/images/kerberos-storage-architecture-kubernetes-cloud.png\")} /></p>\n    <p>{`Install Kerberos Storage on a Kubernetes Service Provider by `}<a parentName=\"p\" {...{\n        \"href\": \"/storage/installation-cloud\"\n      }}>{`following this step-by-step installation guide`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"installation-in-private-cloud-or-baremetal\"\n    }}>{`Installation in Private Cloud or Baremetal`}</h2>\n    <p>{`No need to install Kerberos Storage on a Kubernetes Service Provider, you could install it on your own Kubernetes cluster in your private cloud, or even better inside your own premise. The closer you bring Kerberos Storage to your surveillance infrastructure, and Kerberos Enterprise, the more benefits you will experience (low latency, low bandwidth, etc).`}</p>\n    <p><img alt=\"architecture kubernetes\" src={require(\"../../public/images/kerberos-storage-architecture-kubernetes-edge.png\")} /></p>\n    <p>{`In contradiction to the Kubernetes Service Provider, you will have some work todo. Setting up Kubernetes Cluster, play with MetalLB, Persistent Volumes and claims. Don't be scared, it's pretty ssttraight forward as well. You can't simple expect a: click, click, ðŸ’¥ approach.`}</p>\n    <p>{`Install Kerberos Storage on a Private cloud or Baremetal by `}<a parentName=\"p\" {...{\n        \"href\": \"/storage/installation-edge\"\n      }}>{`following this step-by-step installation guide`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/kerberos-storage-architecture-kubernetes-edge-be8a8637f99550e139113b95d62765f8.png\";","module.exports = __webpack_public_path__ + \"static/kerberos-enterprise-kubernetes-9ac3d8a97ac71de06f207a7ed01db2f7.png\";"],"sourceRoot":""}