{"expireTime":9007200862086253000,"key":"gatsby-plugin-mdx-entire-payload-b8c441bb7cc4a1f3ef7a0a58975aaa8b-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":125,"offset":126},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":128},"end":{"line":5,"column":29,"offset":156},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Kerberos Storage - Providers","position":{"start":{"line":8,"column":3,"offset":161},"end":{"line":8,"column":31,"offset":189},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":159},"end":{"line":8,"column":31,"offset":189},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Kerberos Storage allows you to attach one or more (and different) storage providers. These providers could be in the cloud like S3, Google Cloud Storage or Azure blob storage, or providers on premise such as Minio.","position":{"start":{"line":10,"column":1,"offset":191},"end":{"line":10,"column":215,"offset":405},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":191},"end":{"line":10,"column":215,"offset":405},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Depending on your use case: Kerberos Storage Cloud or Kerberos Storage Edge, you will opt for a specific storage provider. For example in the case Kerberos Storage Edge, it makes sense to store your recordings also at the edge. The accomplish this you could for example setup a Minio instance.","position":{"start":{"line":12,"column":1,"offset":407},"end":{"line":12,"column":294,"offset":700},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":407},"end":{"line":12,"column":294,"offset":700},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Below you can find a detailed step-by-step guide to setup different storage providers.","position":{"start":{"line":14,"column":1,"offset":702},"end":{"line":14,"column":87,"offset":788},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":702},"end":{"line":14,"column":87,"offset":788},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":16,"column":4,"offset":793},"end":{"line":16,"column":17,"offset":806},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":790},"end":{"line":16,"column":17,"offset":806},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This installation guide assumes you have setup Kerberos Storage properly.","position":{"start":{"line":18,"column":1,"offset":808},"end":{"line":18,"column":74,"offset":881},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":808},"end":{"line":18,"column":74,"offset":881},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation Minio","position":{"start":{"line":20,"column":4,"offset":886},"end":{"line":20,"column":22,"offset":904},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":883},"end":{"line":20,"column":22,"offset":904},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Minio is the recommended solution if you want to persist your data at the edge. To setup minio you just have to install a few components. Let's start with getting the configuration files (if not already done) for setting up Minio.","position":{"start":{"line":22,"column":1,"offset":906},"end":{"line":22,"column":231,"offset":1136},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":906},"end":{"line":22,"column":231,"offset":1136},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"git clone https://github.com/kerberos-io/storage","position":{"start":{"line":24,"column":1,"offset":1138},"end":{"line":24,"column":53,"offset":1190},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now we have the configrations available, let's use start with creating a ","position":{"start":{"line":26,"column":1,"offset":1192},"end":{"line":26,"column":74,"offset":1265},"indent":[]}},{"type":"inlineCode","value":"local-storage","position":{"start":{"line":26,"column":74,"offset":1265},"end":{"line":26,"column":89,"offset":1280},"indent":[]}},{"type":"text","value":" volume using ","position":{"start":{"line":26,"column":89,"offset":1280},"end":{"line":26,"column":103,"offset":1294},"indent":[]}},{"type":"inlineCode","value":"./storage/yaml/minio/volume.yaml","position":{"start":{"line":26,"column":103,"offset":1294},"end":{"line":26,"column":137,"offset":1328},"indent":[]}},{"type":"text","value":" file. When opening the file we should focus on following attributes.","position":{"start":{"line":26,"column":137,"offset":1328},"end":{"line":26,"column":206,"offset":1397},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1192},"end":{"line":26,"column":206,"offset":1397},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  spec:\n    capacity:\n-->   storage: 20Gi\n    accessModes:\n    - ReadWriteOnce\n    persistentVolumeReclaimPolicy: Recycle\n    storageClassName: hdd\n    local:\n-->   path: /home/minio\n    nodeAffinity:\n      required:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: kubernetes.io/hostname\n            operator: In\n            values:\n-->         - hostname","position":{"start":{"line":29,"column":1,"offset":1400},"end":{"line":45,"column":27,"offset":1847},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Adapt the storage capacity to the amount of storage you want to assign to Minio, change the local path to the directory where you want to persist your data, and to finish make sure the hostname is the hostname of your node (where the directory is located). Once ready we can create the ","position":{"start":{"line":47,"column":1,"offset":1849},"end":{"line":47,"column":287,"offset":2135},"indent":[]}},{"type":"inlineCode","value":"local.path","position":{"start":{"line":47,"column":287,"offset":2135},"end":{"line":47,"column":299,"offset":2147},"indent":[]}},{"type":"text","value":" directory and create the volume.","position":{"start":{"line":47,"column":299,"offset":2147},"end":{"line":47,"column":332,"offset":2180},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1849},"end":{"line":47,"column":332,"offset":2180},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"mkdir /home/minio\nkubectl apply -f ./storage/yaml/minio/volume.yaml","position":{"start":{"line":49,"column":1,"offset":2182},"end":{"line":50,"column":54,"offset":2257},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Next create Persistent Volume Claim (PVC), open the ","position":{"start":{"line":52,"column":1,"offset":2259},"end":{"line":52,"column":53,"offset":2311},"indent":[]}},{"type":"inlineCode","value":"./storage/yaml/minio/volume.yaml","position":{"start":{"line":52,"column":53,"offset":2311},"end":{"line":52,"column":87,"offset":2345},"indent":[]}},{"type":"text","value":" file and make sure the storage is aligned with the configurations of you ","position":{"start":{"line":52,"column":87,"offset":2345},"end":{"line":52,"column":161,"offset":2419},"indent":[]}},{"type":"inlineCode","value":"volume.yaml","position":{"start":{"line":52,"column":161,"offset":2419},"end":{"line":52,"column":174,"offset":2432},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":52,"column":174,"offset":2432},"end":{"line":52,"column":175,"offset":2433},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":2259},"end":{"line":52,"column":175,"offset":2433},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  resources:\n    # This is the request for storage. Should be available in the cluster.\n    requests:\n-->   storage: 20Gi    ","position":{"start":{"line":54,"column":1,"offset":2435},"end":{"line":57,"column":28,"offset":2576},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Once ready, create the PVC.","position":{"start":{"line":59,"column":1,"offset":2578},"end":{"line":59,"column":28,"offset":2605},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2578},"end":{"line":59,"column":28,"offset":2605},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubectl apply -f ./storage/yaml/minio/pvc.yaml","position":{"start":{"line":61,"column":1,"offset":2607},"end":{"line":61,"column":51,"offset":2657},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ok, let us finish this and deploy the Kerberos Storage deployment. Before applying, we have to make sure the Ingress hostname is aligned. Open the ","position":{"start":{"line":63,"column":1,"offset":2659},"end":{"line":63,"column":148,"offset":2806},"indent":[]}},{"type":"inlineCode","value":"./storage/yaml/minio/deployment.yaml","position":{"start":{"line":63,"column":148,"offset":2806},"end":{"line":63,"column":186,"offset":2844},"indent":[]}},{"type":"text","value":" file and scroll down until you see the Ingress.","position":{"start":{"line":63,"column":186,"offset":2844},"end":{"line":63,"column":234,"offset":2892},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2659},"end":{"line":63,"column":234,"offset":2892},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  spec:\n    rules:\n--> - host: minio.domain.com\n      http:\n        paths:\n        - path: /\n          backend:\n            serviceName: minio\n            servicePort: 9000","position":{"start":{"line":65,"column":1,"offset":2894},"end":{"line":73,"column":34,"offset":3102},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Adapt the hostname to your needs, and apply the ","position":{"start":{"line":75,"column":1,"offset":3104},"end":{"line":75,"column":49,"offset":3152},"indent":[]}},{"type":"inlineCode","value":"deployment.yaml","position":{"start":{"line":75,"column":49,"offset":3152},"end":{"line":75,"column":66,"offset":3169},"indent":[]}},{"type":"text","value":" file when appropriate.","position":{"start":{"line":75,"column":66,"offset":3169},"end":{"line":75,"column":89,"offset":3192},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3104},"end":{"line":75,"column":89,"offset":3192},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubectl apply -f ./storage/yaml/minio/deployment.yaml","position":{"start":{"line":77,"column":1,"offset":3194},"end":{"line":77,"column":58,"offset":3251},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You should now see Minio being installed, and able to access it from your favourite web browser. You can use with the credentials you have defined in the ","position":{"start":{"line":79,"column":1,"offset":3253},"end":{"line":79,"column":155,"offset":3407},"indent":[]}},{"type":"inlineCode","value":"deployment.yaml file.","position":{"start":{"line":79,"column":155,"offset":3407},"end":{"line":79,"column":178,"offset":3430},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":3253},"end":{"line":79,"column":178,"offset":3430},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"../../public/images/minio/webapp.png","alt":"minio kubernetes","position":{"start":{"line":81,"column":1,"offset":3432},"end":{"line":81,"column":58,"offset":3489},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":3432},"end":{"line":81,"column":58,"offset":3489},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":84,"column":1,"offset":3492},"end":{"line":84,"column":31,"offset":3522},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":84,"column":31,"offset":3522}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"kerberos-storage---providers\"\n    }}>{`Kerberos Storage - Providers`}</h1>\n    <p>{`Kerberos Storage allows you to attach one or more (and different) storage providers. These providers could be in the cloud like S3, Google Cloud Storage or Azure blob storage, or providers on premise such as Minio.`}</p>\n    <p>{`Depending on your use case: Kerberos Storage Cloud or Kerberos Storage Edge, you will opt for a specific storage provider. For example in the case Kerberos Storage Edge, it makes sense to store your recordings also at the edge. The accomplish this you could for example setup a Minio instance.`}</p>\n    <p>{`Below you can find a detailed step-by-step guide to setup different storage providers.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`This installation guide assumes you have setup Kerberos Storage properly.`}</p>\n    <h2 {...{\n      \"id\": \"installation-minio\"\n    }}>{`Installation Minio`}</h2>\n    <p>{`Minio is the recommended solution if you want to persist your data at the edge. To setup minio you just have to install a few components. Let's start with getting the configuration files (if not already done) for setting up Minio.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`git clone https://github.com/kerberos-io/storage`}</span></code></pre>\n    <p>{`Now we have the configrations available, let's use start with creating a `}<inlineCode parentName=\"p\">{`local-storage`}</inlineCode>{` volume using `}<inlineCode parentName=\"p\">{`./storage/yaml/minio/volume.yaml`}</inlineCode>{` file. When opening the file we should focus on following attributes.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  spec:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    capacity:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`-->   storage: 20Gi`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    accessModes:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    - ReadWriteOnce`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    persistentVolumeReclaimPolicy: Recycle`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    storageClassName: hdd`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    local:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`-->   path: /home/minio`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    nodeAffinity:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`      required:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`        nodeSelectorTerms:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`        - matchExpressions:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`          - key: kubernetes.io/hostname`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`            operator: In`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`            values:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`-->         - hostname`}</span></code></pre>\n    <p>{`Adapt the storage capacity to the amount of storage you want to assign to Minio, change the local path to the directory where you want to persist your data, and to finish make sure the hostname is the hostname of your node (where the directory is located). Once ready we can create the `}<inlineCode parentName=\"p\">{`local.path`}</inlineCode>{` directory and create the volume.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`mkdir /home/minio`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`kubectl apply -f ./storage/yaml/minio/volume.yaml`}</span></code></pre>\n    <p>{`Next create Persistent Volume Claim (PVC), open the `}<inlineCode parentName=\"p\">{`./storage/yaml/minio/volume.yaml`}</inlineCode>{` file and make sure the storage is aligned with the configurations of you `}<inlineCode parentName=\"p\">{`volume.yaml`}</inlineCode>{`.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  resources:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    # This is the request for storage. Should be available in the cluster.`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    requests:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`-->   storage: 20Gi    `}</span></code></pre>\n    <p>{`Once ready, create the PVC.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`kubectl apply -f ./storage/yaml/minio/pvc.yaml`}</span></code></pre>\n    <p>{`Ok, let us finish this and deploy the Kerberos Storage deployment. Before applying, we have to make sure the Ingress hostname is aligned. Open the `}<inlineCode parentName=\"p\">{`./storage/yaml/minio/deployment.yaml`}</inlineCode>{` file and scroll down until you see the Ingress.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  spec:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    rules:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`--> - host: minio.domain.com`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`      http:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`        paths:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`        - path: /`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`          backend:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`            serviceName: minio`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`            servicePort: 9000`}</span></code></pre>\n    <p>{`Adapt the hostname to your needs, and apply the `}<inlineCode parentName=\"p\">{`deployment.yaml`}</inlineCode>{` file when appropriate.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`kubectl apply -f ./storage/yaml/minio/deployment.yaml`}</span></code></pre>\n    <p>{`You should now see Minio being installed, and able to access it from your favourite web browser. You can use with the credentials you have defined in the `}<inlineCode parentName=\"p\">{`deployment.yaml file.`}</inlineCode></p>\n    <p><img alt=\"minio kubernetes\" src={require(\"../../public/images/minio/webapp.png\")} /></p>\n\n    <style {...{\n      \"className\": \"vscode-highlight-styles\"\n    }}>{`\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n`}</style>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}