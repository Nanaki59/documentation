{"expireTime":9007200861602256000,"key":"gatsby-plugin-mdx-entire-payload-1e298beeb078c409da5a70ee6c1f7df3-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":125,"offset":126},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":128},"end":{"line":5,"column":29,"offset":156},"indent":[]}},{"type":"import","value":"import ReplaceVersion from \"../components/ReplaceVersion\";","position":{"start":{"line":8,"column":1,"offset":159},"end":{"line":8,"column":59,"offset":217},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Introduction","position":{"start":{"line":10,"column":3,"offset":221},"end":{"line":10,"column":15,"offset":233},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":219},"end":{"line":10,"column":15,"offset":233},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Welcome to the Kerberos Enterprise edge installation. This is the way to go if you want to install Kerberos Enterprise on your Baremetal infrastructure or inside your Private Cloud.","position":{"start":{"line":12,"column":1,"offset":235},"end":{"line":12,"column":182,"offset":416},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":235},"end":{"line":12,"column":182,"offset":416},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"../../public/images/kerberos-agent-architecture-kubernetes.png","alt":"architecture kubernetes","position":{"start":{"line":14,"column":1,"offset":418},"end":{"line":14,"column":91,"offset":508},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":418},"end":{"line":14,"column":91,"offset":508},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Before we can actual start installing the different deployments in our cluster, we need to make sure we have one available.","position":{"start":{"line":16,"column":1,"offset":510},"end":{"line":16,"column":124,"offset":633},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":510},"end":{"line":16,"column":124,"offset":633},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Docker","position":{"start":{"line":18,"column":3,"offset":637},"end":{"line":18,"column":9,"offset":643},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":635},"end":{"line":18,"column":9,"offset":643},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you have a fresh Linux installation, make sure you have Docker installed. If not the case, this is how you can install it on a Ubuntu OSS.","position":{"start":{"line":20,"column":1,"offset":645},"end":{"line":20,"column":142,"offset":786},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":645},"end":{"line":20,"column":142,"offset":786},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"apt install docker.io -y","position":{"start":{"line":22,"column":1,"offset":788},"end":{"line":22,"column":29,"offset":816},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Kubernetes","position":{"start":{"line":24,"column":3,"offset":820},"end":{"line":24,"column":13,"offset":830},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":818},"end":{"line":24,"column":13,"offset":830},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After Docker being installed go ahead and install the different Kubernetes servicess and tools.","position":{"start":{"line":26,"column":1,"offset":832},"end":{"line":26,"column":96,"offset":927},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":832},"end":{"line":26,"column":96,"offset":927},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"apt update -y\napt install apt-transport-https curl -y\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add\napt-add-repository \"deb http://apt.kubernetes.io/ kubernetes-xenial main\"\napt update -y && apt install kubeadm kubelet kubectl kubernetes-cni -y","position":{"start":{"line":28,"column":1,"offset":929},"end":{"line":32,"column":75,"offset":1223},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Make sure you disable swap, this is required by Kubernetes.","position":{"start":{"line":34,"column":1,"offset":1225},"end":{"line":34,"column":60,"offset":1284},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1225},"end":{"line":34,"column":60,"offset":1284},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"swapoff -a","position":{"start":{"line":36,"column":1,"offset":1286},"end":{"line":36,"column":15,"offset":1300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"And if you want to make it permanent after every boot.","position":{"start":{"line":38,"column":1,"offset":1302},"end":{"line":38,"column":55,"offset":1356},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1302},"end":{"line":38,"column":55,"offset":1356},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"sudo sed -i.bak '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab","position":{"start":{"line":40,"column":1,"offset":1358},"end":{"line":40,"column":59,"offset":1416},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation","position":{"start":{"line":42,"column":4,"offset":1421},"end":{"line":42,"column":16,"offset":1433},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1418},"end":{"line":42,"column":16,"offset":1433},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Before initiating a new Kubernetes cluster, make sure you have properly cleaned up previous installation (if this was the case ofc).","position":{"start":{"line":44,"column":1,"offset":1435},"end":{"line":44,"column":133,"offset":1567},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1435},"end":{"line":44,"column":133,"offset":1567},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubeadm reset\nrm -rf $HOME/.kube","position":{"start":{"line":46,"column":1,"offset":1569},"end":{"line":47,"column":23,"offset":1609},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Initiate a new Kubernetes cluster using following command. This will use the current CIDR. If you want to use another CIDR, specify following arguments: ","position":{"start":{"line":49,"column":1,"offset":1611},"end":{"line":49,"column":154,"offset":1764},"indent":[]}},{"type":"inlineCode","value":"--pod-network-cidr=10.244.0.0/16","position":{"start":{"line":49,"column":154,"offset":1764},"end":{"line":49,"column":188,"offset":1798},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":49,"column":188,"offset":1798},"end":{"line":49,"column":189,"offset":1799},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1611},"end":{"line":49,"column":189,"offset":1799},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubeadm init","position":{"start":{"line":51,"column":1,"offset":1801},"end":{"line":51,"column":17,"offset":1817},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once successful you should see the following. Note the ","position":{"start":{"line":53,"column":1,"offset":1819},"end":{"line":53,"column":56,"offset":1874},"indent":[]}},{"type":"inlineCode","value":"discovery token","position":{"start":{"line":53,"column":56,"offset":1874},"end":{"line":53,"column":73,"offset":1891},"indent":[]}},{"type":"text","value":" which you need to use to connect additional nodes to your cluster.","position":{"start":{"line":53,"column":73,"offset":1891},"end":{"line":53,"column":140,"offset":1958},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1819},"end":{"line":53,"column":140,"offset":1958},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Your Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.1.103:6443 --token ej7ckt.uof7o2iplqf0r2up \\\n    --discovery-token-ca-cert-hash sha256:9cbcc00d34be2dbd605174802d9e52fbcdd617324c237bf58767b369fa586209","position":{"start":{"line":55,"column":1,"offset":1960},"end":{"line":70,"column":111,"offset":2735},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now we have a Kubernetes cluster, we need to make sure we add make it available in our ","position":{"start":{"line":72,"column":1,"offset":2737},"end":{"line":72,"column":88,"offset":2824},"indent":[]}},{"type":"inlineCode","value":"kubeconfig","position":{"start":{"line":72,"column":88,"offset":2824},"end":{"line":72,"column":100,"offset":2836},"indent":[]}},{"type":"text","value":". This will allow us to query our Kubernetes cluster with the ","position":{"start":{"line":72,"column":100,"offset":2836},"end":{"line":72,"column":162,"offset":2898},"indent":[]}},{"type":"inlineCode","value":"kubectl","position":{"start":{"line":72,"column":162,"offset":2898},"end":{"line":72,"column":171,"offset":2907},"indent":[]}},{"type":"text","value":" command.","position":{"start":{"line":72,"column":171,"offset":2907},"end":{"line":72,"column":180,"offset":2916},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2737},"end":{"line":72,"column":180,"offset":2916},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"mkdir -p $HOME/.kube\ncp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nchown $(id -u):$(id -g) $HOME/.kube/config","position":{"start":{"line":74,"column":1,"offset":2918},"end":{"line":76,"column":47,"offset":3045},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Untaint all nodess","position":{"start":{"line":78,"column":4,"offset":3050},"end":{"line":78,"column":22,"offset":3068},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3047},"end":{"line":78,"column":22,"offset":3068},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"By default, and in this example, we only have one node our master node. In a production scenario we would have additional worker nodes. By default the master nodes are marked as ","position":{"start":{"line":80,"column":1,"offset":3070},"end":{"line":80,"column":179,"offset":3248},"indent":[]}},{"type":"inlineCode","value":"tainted","position":{"start":{"line":80,"column":179,"offset":3248},"end":{"line":80,"column":188,"offset":3257},"indent":[]}},{"type":"text","value":", this means they cannot run workloads. To allow master nodes to run workloads, we need to untaint them. If we wouldn't do this our pods would never be scheduled, as we do not have worker nodes at this moment.","position":{"start":{"line":80,"column":188,"offset":3257},"end":{"line":80,"column":397,"offset":3466},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":3070},"end":{"line":80,"column":397,"offset":3466},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubectl taint nodes --all node-role.kubernetes.io/master-","position":{"start":{"line":82,"column":1,"offset":3468},"end":{"line":82,"column":62,"offset":3529},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Calico","position":{"start":{"line":84,"column":4,"offset":3534},"end":{"line":84,"column":10,"offset":3540},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":3531},"end":{"line":84,"column":10,"offset":3540},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  curl ","position":{"start":{"line":86,"column":1,"offset":3542},"end":{"line":86,"column":8,"offset":3549},"indent":[]}},{"type":"link","title":null,"url":"https://docs.projectcalico.org/manifests/calico.yaml","children":[{"type":"text","value":"https://docs.projectcalico.org/manifests/calico.yaml","position":{"start":{"line":86,"column":8,"offset":3549},"end":{"line":86,"column":60,"offset":3601},"indent":[]}}],"position":{"start":{"line":86,"column":8,"offset":3549},"end":{"line":86,"column":60,"offset":3601},"indent":[]}},{"type":"text","value":" -O\n  kubectl apply -f calico.yaml","position":{"start":{"line":86,"column":60,"offset":3601},"end":{"line":87,"column":31,"offset":3635},"indent":[1]}}],"position":{"start":{"line":86,"column":1,"offset":3542},"end":{"line":87,"column":31,"offset":3635},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Download Kerberos Enterprise configuration","position":{"start":{"line":89,"column":3,"offset":3639},"end":{"line":89,"column":45,"offset":3681},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3637},"end":{"line":89,"column":45,"offset":3681},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  git clone ","position":{"start":{"line":91,"column":1,"offset":3683},"end":{"line":91,"column":13,"offset":3695},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/kerberos-io/enterprise","children":[{"type":"text","value":"https://github.com/kerberos-io/enterprise","position":{"start":{"line":91,"column":13,"offset":3695},"end":{"line":91,"column":54,"offset":3736},"indent":[]}}],"position":{"start":{"line":91,"column":13,"offset":3695},"end":{"line":91,"column":54,"offset":3736},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3683},"end":{"line":91,"column":54,"offset":3736},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Install metallb (","position":{"start":{"line":93,"column":3,"offset":3740},"end":{"line":93,"column":20,"offset":3757},"indent":[]}},{"type":"link","title":null,"url":"https://metallb.universe.tf/installation/","children":[{"type":"text","value":"https://metallb.universe.tf/installation/","position":{"start":{"line":93,"column":20,"offset":3757},"end":{"line":93,"column":61,"offset":3798},"indent":[]}}],"position":{"start":{"line":93,"column":20,"offset":3757},"end":{"line":93,"column":61,"offset":3798},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":93,"column":61,"offset":3798},"end":{"line":93,"column":62,"offset":3799},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":3738},"end":{"line":93,"column":62,"offset":3799},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl apply -f ","position":{"start":{"line":95,"column":1,"offset":3801},"end":{"line":95,"column":20,"offset":3820},"indent":[]}},{"type":"link","title":null,"url":"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml","children":[{"type":"text","value":"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml","position":{"start":{"line":95,"column":20,"offset":3820},"end":{"line":95,"column":101,"offset":3901},"indent":[]}}],"position":{"start":{"line":95,"column":20,"offset":3820},"end":{"line":95,"column":101,"offset":3901},"indent":[]}},{"type":"text","value":"\n  kubectl apply -f ","position":{"start":{"line":95,"column":101,"offset":3901},"end":{"line":96,"column":20,"offset":3921},"indent":[1]}},{"type":"link","title":null,"url":"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml","children":[{"type":"text","value":"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml","position":{"start":{"line":96,"column":20,"offset":3921},"end":{"line":96,"column":99,"offset":4000},"indent":[]}}],"position":{"start":{"line":96,"column":20,"offset":3921},"end":{"line":96,"column":99,"offset":4000},"indent":[]}},{"type":"text","value":"\n  kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=\"$(openssl rand -base64 128)\"","position":{"start":{"line":96,"column":99,"offset":4000},"end":{"line":97,"column":116,"offset":4116},"indent":[1]}}],"position":{"start":{"line":95,"column":1,"offset":3801},"end":{"line":97,"column":116,"offset":4116},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl apply -f ./enterprise/yaml/metallb/configmap.yaml","position":{"start":{"line":99,"column":1,"offset":4118},"end":{"line":99,"column":60,"offset":4177},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":4118},"end":{"line":99,"column":60,"offset":4177},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup helm","position":{"start":{"line":101,"column":3,"offset":4181},"end":{"line":101,"column":13,"offset":4191},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":4179},"end":{"line":101,"column":13,"offset":4191},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  curl -fsSL -o get_helm.sh ","position":{"start":{"line":103,"column":1,"offset":4193},"end":{"line":103,"column":29,"offset":4221},"indent":[]}},{"type":"link","title":null,"url":"https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3","children":[{"type":"text","value":"https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3","position":{"start":{"line":103,"column":29,"offset":4221},"end":{"line":103,"column":98,"offset":4290},"indent":[]}}],"position":{"start":{"line":103,"column":29,"offset":4221},"end":{"line":103,"column":98,"offset":4290},"indent":[]}},{"type":"text","value":"\n  chmod 700 get_helm.sh\n  ./get_helm.sh","position":{"start":{"line":103,"column":98,"offset":4290},"end":{"line":105,"column":16,"offset":4330},"indent":[1,1]}}],"position":{"start":{"line":103,"column":1,"offset":4193},"end":{"line":105,"column":16,"offset":4330},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup traefik","position":{"start":{"line":107,"column":3,"offset":4334},"end":{"line":107,"column":16,"offset":4347},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":4332},"end":{"line":107,"column":16,"offset":4347},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  helm repo add stable ","position":{"start":{"line":109,"column":1,"offset":4349},"end":{"line":109,"column":24,"offset":4372},"indent":[]}},{"type":"link","title":null,"url":"https://charts.helm.sh/stable","children":[{"type":"text","value":"https://charts.helm.sh/stable","position":{"start":{"line":109,"column":24,"offset":4372},"end":{"line":109,"column":53,"offset":4401},"indent":[]}}],"position":{"start":{"line":109,"column":24,"offset":4372},"end":{"line":109,"column":53,"offset":4401},"indent":[]}},{"type":"text","value":"\n  helm install traefik -f ./enterprise/yaml/traefik/values.yaml stable/traefik","position":{"start":{"line":109,"column":53,"offset":4401},"end":{"line":110,"column":79,"offset":4480},"indent":[1]}}],"position":{"start":{"line":109,"column":1,"offset":4349},"end":{"line":110,"column":79,"offset":4480},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup mongoDB","position":{"start":{"line":112,"column":3,"offset":4484},"end":{"line":112,"column":16,"offset":4497},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4482},"end":{"line":112,"column":16,"offset":4497},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  mkdir /home/mongodb/\n  kubectl create -f ./enterprise/yaml/mongodb/volume.yaml","position":{"start":{"line":114,"column":1,"offset":4499},"end":{"line":115,"column":58,"offset":4579},"indent":[1]}}],"position":{"start":{"line":114,"column":1,"offset":4499},"end":{"line":115,"column":58,"offset":4579},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"  helm repo add bitnami ","position":{"start":{"line":117,"column":1,"offset":4581},"end":{"line":117,"column":25,"offset":4605},"indent":[]}},{"type":"link","title":null,"url":"https://charts.bitnami.com/bitnami","children":[{"type":"text","value":"https://charts.bitnami.com/bitnami","position":{"start":{"line":117,"column":25,"offset":4605},"end":{"line":117,"column":59,"offset":4639},"indent":[]}}],"position":{"start":{"line":117,"column":25,"offset":4605},"end":{"line":117,"column":59,"offset":4639},"indent":[]}},{"type":"text","value":"\n  helm install mongodb bitnami/mongodb --values ./enterprise/yaml/mongodb/values.yaml\n  export MONGODB_ROOT_PASSWORD=$(kubectl get secret --namespace default mongodb -o jsonpath=\"{.data.mongodb-root-password}\" | base64 --decode)\n  echo $MONGODB_ROOT_PASSWORD","position":{"start":{"line":117,"column":59,"offset":4639},"end":{"line":120,"column":30,"offset":4898},"indent":[1,1,1]}}],"position":{"start":{"line":117,"column":1,"offset":4581},"end":{"line":120,"column":30,"offset":4898},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup Kerberos Enterprise","position":{"start":{"line":122,"column":3,"offset":4902},"end":{"line":122,"column":28,"offset":4927},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":4900},"end":{"line":122,"column":28,"offset":4927},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl apply -f ./enterprise/yaml/factory/clusterrole.yaml\n  kubectl apply -f ./enterprise/yaml/factory/deployment.yaml","position":{"start":{"line":124,"column":1,"offset":4929},"end":{"line":125,"column":61,"offset":5051},"indent":[1]}}],"position":{"start":{"line":124,"column":1,"offset":4929},"end":{"line":125,"column":61,"offset":5051},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup Kerberos Storage","position":{"start":{"line":127,"column":3,"offset":5055},"end":{"line":127,"column":25,"offset":5077},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":5053},"end":{"line":127,"column":25,"offset":5077},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  git clone ","position":{"start":{"line":129,"column":1,"offset":5079},"end":{"line":129,"column":13,"offset":5091},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/kerberos-io/storage","children":[{"type":"text","value":"https://github.com/kerberos-io/storage","position":{"start":{"line":129,"column":13,"offset":5091},"end":{"line":129,"column":51,"offset":5129},"indent":[]}}],"position":{"start":{"line":129,"column":13,"offset":5091},"end":{"line":129,"column":51,"offset":5129},"indent":[]}},{"type":"text","value":"\n  kubectl apply -f ./storage/yaml/deployment.yaml","position":{"start":{"line":129,"column":51,"offset":5129},"end":{"line":130,"column":50,"offset":5179},"indent":[1]}}],"position":{"start":{"line":129,"column":1,"offset":5079},"end":{"line":130,"column":50,"offset":5179},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup Minio","position":{"start":{"line":132,"column":3,"offset":5183},"end":{"line":132,"column":14,"offset":5194},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":5181},"end":{"line":132,"column":14,"offset":5194},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl create -f ./storage/yaml/minio/volume.yaml\n  kubectl create -f ./storage/yaml/minio/pvc.yaml\n  kubectl create -f ./storage/yaml/minio/svc.yaml\n  kubectl create -f ./storage/yaml/minio/deployment.yaml","position":{"start":{"line":134,"column":1,"offset":5196},"end":{"line":137,"column":57,"offset":5405},"indent":[1,1,1]}}],"position":{"start":{"line":134,"column":1,"offset":5196},"end":{"line":137,"column":57,"offset":5405},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup Kerberos Storage Cleanup","position":{"start":{"line":139,"column":3,"offset":5409},"end":{"line":139,"column":33,"offset":5439},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":5407},"end":{"line":139,"column":33,"offset":5439},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl apply -f ./storage/yaml/deployment-cleanup.yaml","position":{"start":{"line":141,"column":1,"offset":5441},"end":{"line":141,"column":58,"offset":5498},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":5441},"end":{"line":141,"column":58,"offset":5498},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":144,"column":1,"offset":5501},"end":{"line":144,"column":31,"offset":5531},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":144,"column":31,"offset":5531}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport ReplaceVersion from \"../components/ReplaceVersion\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h1>\n    <p>{`Welcome to the Kerberos Enterprise edge installation. This is the way to go if you want to install Kerberos Enterprise on your Baremetal infrastructure or inside your Private Cloud.`}</p>\n    <p><img alt=\"architecture kubernetes\" src={require(\"../../public/images/kerberos-agent-architecture-kubernetes.png\")} /></p>\n    <p>{`Before we can actual start installing the different deployments in our cluster, we need to make sure we have one available.`}</p>\n    <h1 {...{\n      \"id\": \"docker\"\n    }}>{`Docker`}</h1>\n    <p>{`If you have a fresh Linux installation, make sure you have Docker installed. If not the case, this is how you can install it on a Ubuntu OSS.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`apt install docker.io -y`}</span></code></pre>\n    <h1 {...{\n      \"id\": \"kubernetes\"\n    }}>{`Kubernetes`}</h1>\n    <p>{`After Docker being installed go ahead and install the different Kubernetes servicess and tools.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`apt update -y`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`apt install apt-transport-https curl -y`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`apt-add-repository \"deb http://apt.kubernetes.io/ kubernetes-xenial main\"`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`apt update -y && apt install kubeadm kubelet kubectl kubernetes-cni -y`}</span></code></pre>\n    <p>{`Make sure you disable swap, this is required by Kubernetes.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`swapoff -a`}</span></code></pre>\n    <p>{`And if you want to make it permanent after every boot.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`sudo sed -i.bak '/ swap / s/^\\\\(.*\\\\)$/#\\\\1/g' /etc/fstab`}</span></code></pre>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`Before initiating a new Kubernetes cluster, make sure you have properly cleaned up previous installation (if this was the case ofc).`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`kubeadm reset`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`rm -rf $HOME/.kube`}</span></code></pre>\n    <p>{`Initiate a new Kubernetes cluster using following command. This will use the current CIDR. If you want to use another CIDR, specify following arguments: `}<inlineCode parentName=\"p\">{`--pod-network-cidr=10.244.0.0/16`}</inlineCode>{`.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`kubeadm init`}</span></code></pre>\n    <p>{`Once successful you should see the following. Note the `}<inlineCode parentName=\"p\">{`discovery token`}</inlineCode>{` which you need to use to connect additional nodes to your cluster.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`Your Kubernetes control-plane has initialized successfully!`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`To start using your cluster, you need to run the following as a regular user:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  mkdir -p $HOME/.kube`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  sudo chown $(id -u):$(id -g) $HOME/.kube/config`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`You should now deploy a pod network to the cluster.`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  https://kubernetes.io/docs/concepts/cluster-administration/addons/`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`Then you can join any number of worker nodes by running the following on each as root:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`kubeadm join 192.168.1.103:6443 --token ej7ckt.uof7o2iplqf0r2up \\\\`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    --discovery-token-ca-cert-hash sha256:9cbcc00d34be2dbd605174802d9e52fbcdd617324c237bf58767b369fa586209`}</span></code></pre>\n    <p>{`Now we have a Kubernetes cluster, we need to make sure we add make it available in our `}<inlineCode parentName=\"p\">{`kubeconfig`}</inlineCode>{`. This will allow us to query our Kubernetes cluster with the `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{` command.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`mkdir -p $HOME/.kube`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`cp -i /etc/kubernetes/admin.conf $HOME/.kube/config`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`chown $(id -u):$(id -g) $HOME/.kube/config`}</span></code></pre>\n    <h2 {...{\n      \"id\": \"untaint-all-nodess\"\n    }}>{`Untaint all nodess`}</h2>\n    <p>{`By default, and in this example, we only have one node our master node. In a production scenario we would have additional worker nodes. By default the master nodes are marked as `}<inlineCode parentName=\"p\">{`tainted`}</inlineCode>{`, this means they cannot run workloads. To allow master nodes to run workloads, we need to untaint them. If we wouldn't do this our pods would never be scheduled, as we do not have worker nodes at this moment.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`kubectl taint nodes --all node-role.kubernetes.io/master-`}</span></code></pre>\n    <h2 {...{\n      \"id\": \"calico\"\n    }}>{`Calico`}</h2>\n    <p>{`  curl `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.projectcalico.org/manifests/calico.yaml\"\n      }}>{`https://docs.projectcalico.org/manifests/calico.yaml`}</a>{` -O\nkubectl apply -f calico.yaml`}</p>\n    <h1 {...{\n      \"id\": \"download-kerberos-enterprise-configuration\"\n    }}>{`Download Kerberos Enterprise configuration`}</h1>\n    <p>{`  git clone `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kerberos-io/enterprise\"\n      }}>{`https://github.com/kerberos-io/enterprise`}</a></p>\n    <h1 {...{\n      \"id\": \"install-metallb-httpsmetallbuniversetfinstallation\"\n    }}>{`Install metallb (`}<a parentName=\"h1\" {...{\n        \"href\": \"https://metallb.universe.tf/installation/\"\n      }}>{`https://metallb.universe.tf/installation/`}</a>{`)`}</h1>\n    <p>{`  kubectl apply -f `}<a parentName=\"p\" {...{\n        \"href\": \"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml\"\n      }}>{`https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml`}</a>{`\nkubectl apply -f `}<a parentName=\"p\" {...{\n        \"href\": \"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml\"\n      }}>{`https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml`}</a>{`\nkubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=\"$(openssl rand -base64 128)\"`}</p>\n    <p>{`  kubectl apply -f ./enterprise/yaml/metallb/configmap.yaml`}</p>\n    <h1 {...{\n      \"id\": \"setup-helm\"\n    }}>{`Setup helm`}</h1>\n    <p>{`  curl -fsSL -o get_helm.sh `}<a parentName=\"p\" {...{\n        \"href\": \"https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3\"\n      }}>{`https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3`}</a>{`\nchmod 700 get_helm.sh\n./get_helm.sh`}</p>\n    <h1 {...{\n      \"id\": \"setup-traefik\"\n    }}>{`Setup traefik`}</h1>\n    <p>{`  helm repo add stable `}<a parentName=\"p\" {...{\n        \"href\": \"https://charts.helm.sh/stable\"\n      }}>{`https://charts.helm.sh/stable`}</a>{`\nhelm install traefik -f ./enterprise/yaml/traefik/values.yaml stable/traefik`}</p>\n    <h1 {...{\n      \"id\": \"setup-mongodb\"\n    }}>{`Setup mongoDB`}</h1>\n    <p>{`  mkdir /home/mongodb/\nkubectl create -f ./enterprise/yaml/mongodb/volume.yaml`}</p>\n    <p>{`  helm repo add bitnami `}<a parentName=\"p\" {...{\n        \"href\": \"https://charts.bitnami.com/bitnami\"\n      }}>{`https://charts.bitnami.com/bitnami`}</a>{`\nhelm install mongodb bitnami/mongodb --values ./enterprise/yaml/mongodb/values.yaml\nexport MONGODB_ROOT_PASSWORD=$(kubectl get secret --namespace default mongodb -o jsonpath=\"{.data.mongodb-root-password}\" | base64 --decode)\necho $MONGODB_ROOT_PASSWORD`}</p>\n    <h1 {...{\n      \"id\": \"setup-kerberos-enterprise\"\n    }}>{`Setup Kerberos Enterprise`}</h1>\n    <p>{`  kubectl apply -f ./enterprise/yaml/factory/clusterrole.yaml\nkubectl apply -f ./enterprise/yaml/factory/deployment.yaml`}</p>\n    <h1 {...{\n      \"id\": \"setup-kerberos-storage\"\n    }}>{`Setup Kerberos Storage`}</h1>\n    <p>{`  git clone `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kerberos-io/storage\"\n      }}>{`https://github.com/kerberos-io/storage`}</a>{`\nkubectl apply -f ./storage/yaml/deployment.yaml`}</p>\n    <h1 {...{\n      \"id\": \"setup-minio\"\n    }}>{`Setup Minio`}</h1>\n    <p>{`  kubectl create -f ./storage/yaml/minio/volume.yaml\nkubectl create -f ./storage/yaml/minio/pvc.yaml\nkubectl create -f ./storage/yaml/minio/svc.yaml\nkubectl create -f ./storage/yaml/minio/deployment.yaml`}</p>\n    <h1 {...{\n      \"id\": \"setup-kerberos-storage-cleanup\"\n    }}>{`Setup Kerberos Storage Cleanup`}</h1>\n    <p>{`  kubectl apply -f ./storage/yaml/deployment-cleanup.yaml`}</p>\n\n    <style {...{\n      \"className\": \"vscode-highlight-styles\"\n    }}>{`\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n`}</style>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}