{"expireTime":9007200861600567000,"key":"gatsby-plugin-mdx-entire-payload-8c23c7dac6a081659ea07c3a4fe0f1ca-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":125,"offset":126},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":128},"end":{"line":5,"column":29,"offset":156},"indent":[]}},{"type":"import","value":"import ReplaceVersion from \"../components/ReplaceVersion\";","position":{"start":{"line":8,"column":1,"offset":159},"end":{"line":8,"column":59,"offset":217},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Introduction","position":{"start":{"line":10,"column":3,"offset":221},"end":{"line":10,"column":15,"offset":233},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":219},"end":{"line":10,"column":15,"offset":233},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Start by installing a Kubernetes cluster. This can be done on one of the hyperscalers (","position":{"start":{"line":12,"column":1,"offset":235},"end":{"line":12,"column":88,"offset":322},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"AWS","position":{"start":{"line":12,"column":90,"offset":324},"end":{"line":12,"column":93,"offset":327},"indent":[]}}],"position":{"start":{"line":12,"column":88,"offset":322},"end":{"line":12,"column":95,"offset":329},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":12,"column":95,"offset":329},"end":{"line":12,"column":97,"offset":331},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"GCP","position":{"start":{"line":12,"column":99,"offset":333},"end":{"line":12,"column":102,"offset":336},"indent":[]}}],"position":{"start":{"line":12,"column":97,"offset":331},"end":{"line":12,"column":104,"offset":338},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":12,"column":104,"offset":338},"end":{"line":12,"column":108,"offset":342},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Azure","position":{"start":{"line":12,"column":110,"offset":344},"end":{"line":12,"column":115,"offset":349},"indent":[]}}],"position":{"start":{"line":12,"column":108,"offset":342},"end":{"line":12,"column":117,"offset":351},"indent":[]}},{"type":"text","value":"),\ncloud providers (Digital Ocean, Scaleway, etc) or on-premise in your own private network.","position":{"start":{"line":12,"column":117,"offset":351},"end":{"line":13,"column":90,"offset":443},"indent":[1]}}],"position":{"start":{"line":12,"column":1,"offset":235},"end":{"line":13,"column":90,"offset":443},"indent":[1]}},{"type":"jsx","value":"<br/>\n<div class='embed-container'><iframe src=\"https://player.vimeo.com/video/404813147\" width=\"640\" height=\"400\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen></iframe></div>\n<br/><br/>","position":{"start":{"line":15,"column":1,"offset":445},"end":{"line":17,"column":11,"offset":647},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Installation","position":{"start":{"line":19,"column":3,"offset":651},"end":{"line":19,"column":15,"offset":663},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":649},"end":{"line":19,"column":15,"offset":663},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Before setting up Kerberos Enterprise, some configuration needs to happen. First thing that we need to do is setting up the RBAC permissions (Role Based Access Control). We need to enable this to be able to query specific endpoints from the Kubernetes API. By default these endpoints are locked, so we need to unlock them.","position":{"start":{"line":21,"column":1,"offset":665},"end":{"line":21,"column":323,"offset":987},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":665},"end":{"line":21,"column":323,"offset":987},"indent":[]}},{"type":"jsx","value":"<br/>\n<div class='embed-container'><iframe src=\"https://player.vimeo.com/video/404767375\" width=\"640\" height=\"400\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen></iframe></div>\n<br/><br/>","position":{"start":{"line":23,"column":1,"offset":989},"end":{"line":25,"column":11,"offset":1191},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"First clone the configrations from our Github repo.","position":{"start":{"line":27,"column":1,"offset":1193},"end":{"line":27,"column":52,"offset":1244},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1193},"end":{"line":27,"column":52,"offset":1244},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"git clone https://github.com/kerberos-io/enterprise enterprise\ncd enterprise","position":{"start":{"line":29,"column":1,"offset":1246},"end":{"line":30,"column":18,"offset":1330},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Next go into the directory and execute the first Kubernetes configuration file ","position":{"start":{"line":32,"column":1,"offset":1332},"end":{"line":32,"column":80,"offset":1411},"indent":[]}},{"type":"inlineCode","value":"clusterrole.yaml","position":{"start":{"line":32,"column":80,"offset":1411},"end":{"line":32,"column":98,"offset":1429},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":32,"column":98,"offset":1429},"end":{"line":32,"column":99,"offset":1430},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1332},"end":{"line":32,"column":99,"offset":1430},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubectl create -f ./yaml/factory/clusterrole.yaml","position":{"start":{"line":34,"column":1,"offset":1432},"end":{"line":34,"column":54,"offset":1485},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This will make several actions inside your cluster available. We need this to be able to create deployments from the factory web app.","position":{"start":{"line":36,"column":1,"offset":1487},"end":{"line":36,"column":134,"offset":1620},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1487},"end":{"line":36,"column":134,"offset":1620},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Helm","position":{"start":{"line":38,"column":4,"offset":1625},"end":{"line":38,"column":8,"offset":1629},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1622},"end":{"line":38,"column":8,"offset":1629},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Next we will install a couple of dependencies which are required for Kerberos Enterprise. ","position":{"start":{"line":40,"column":1,"offset":1631},"end":{"line":40,"column":91,"offset":1721},"indent":[]}},{"type":"link","title":null,"url":"https://helm.sh/","children":[{"type":"strong","children":[{"type":"text","value":"Helm","position":{"start":{"line":40,"column":94,"offset":1724},"end":{"line":40,"column":98,"offset":1728},"indent":[]}}],"position":{"start":{"line":40,"column":92,"offset":1722},"end":{"line":40,"column":100,"offset":1730},"indent":[]}}],"position":{"start":{"line":40,"column":91,"offset":1721},"end":{"line":40,"column":119,"offset":1749},"indent":[]}},{"type":"text","value":" is a package manager for Kubernetes, it helps you setting up services more easily (this could be a MQTT broker, a database, etc).\nInstead of writing yaml files for every service we need, we use so called ","position":{"start":{"line":40,"column":119,"offset":1749},"end":{"line":41,"column":75,"offset":1954},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Charts","position":{"start":{"line":41,"column":77,"offset":1956},"end":{"line":41,"column":83,"offset":1962},"indent":[]}}],"position":{"start":{"line":41,"column":75,"offset":1954},"end":{"line":41,"column":85,"offset":1964},"indent":[]}},{"type":"text","value":" (libraries), that you can reuse and configure the,\nwith the appropriate settings.","position":{"start":{"line":41,"column":85,"offset":1964},"end":{"line":42,"column":31,"offset":2046},"indent":[1]}}],"position":{"start":{"line":40,"column":1,"offset":1631},"end":{"line":42,"column":31,"offset":2046},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Use one of the preferred OS package managers to install the Helm client:","position":{"start":{"line":44,"column":1,"offset":2048},"end":{"line":44,"column":73,"offset":2120},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":2048},"end":{"line":44,"column":73,"offset":2120},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"brew install helm\n\nchoco install kubernetes-helm\n\nscoop install helm\n\ngofish install helm","position":{"start":{"line":46,"column":1,"offset":2122},"end":{"line":52,"column":24,"offset":2227},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Traefik","position":{"start":{"line":54,"column":4,"offset":2232},"end":{"line":54,"column":11,"offset":2239},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2229},"end":{"line":54,"column":11,"offset":2239},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://containo.us/traefik/","children":[{"type":"strong","children":[{"type":"text","value":"Traefik","position":{"start":{"line":56,"column":4,"offset":2244},"end":{"line":56,"column":11,"offset":2251},"indent":[]}}],"position":{"start":{"line":56,"column":2,"offset":2242},"end":{"line":56,"column":13,"offset":2253},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2241},"end":{"line":56,"column":44,"offset":2284},"indent":[]}},{"type":"text","value":" is a reverse proxy and load balancer which allows you to\nexpose your deployments more easily. Kerberos uses Traefik to expose it's APIs more easily.","position":{"start":{"line":56,"column":44,"offset":2284},"end":{"line":57,"column":92,"offset":2433},"indent":[1]}}],"position":{"start":{"line":56,"column":1,"offset":2241},"end":{"line":57,"column":92,"offset":2433},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"By executing following helm command, we will install traefik and link it to a specific DNS name. Open the traefik values file, ","position":{"start":{"line":59,"column":1,"offset":2435},"end":{"line":59,"column":128,"offset":2562},"indent":[]}},{"type":"inlineCode","value":"yaml/traefik/values.yaml","position":{"start":{"line":59,"column":128,"offset":2562},"end":{"line":59,"column":154,"offset":2588},"indent":[]}},{"type":"text","value":", and update the DNS name to your own domain.","position":{"start":{"line":59,"column":154,"offset":2588},"end":{"line":59,"column":199,"offset":2633},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2435},"end":{"line":59,"column":199,"offset":2633},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"    dashboard:\n      enabled: true\n-->   domain: traefik.domain.com\n      serviceType: NodePort\n    rbac:\n        enabled: true","position":{"start":{"line":61,"column":1,"offset":2635},"end":{"line":66,"column":26,"offset":2786},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Add Helm repository and install traefik.","position":{"start":{"line":68,"column":1,"offset":2788},"end":{"line":68,"column":41,"offset":2828},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2788},"end":{"line":68,"column":41,"offset":2828},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"helm repo add stable https://kubernetes-charts.storage.googleapis.com\nhelm install traefik -f ./yaml/traefik/values.yaml stable/traefik","position":{"start":{"line":70,"column":1,"offset":2830},"end":{"line":71,"column":70,"offset":2973},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"After installation you should have an IP attached to traefik service, look for it by executing the ","position":{"start":{"line":73,"column":1,"offset":2975},"end":{"line":73,"column":100,"offset":3074},"indent":[]}},{"type":"inlineCode","value":"get service","position":{"start":{"line":73,"column":100,"offset":3074},"end":{"line":73,"column":113,"offset":3087},"indent":[]}},{"type":"text","value":" command. You will see the ip address in the ","position":{"start":{"line":73,"column":113,"offset":3087},"end":{"line":73,"column":158,"offset":3132},"indent":[]}},{"type":"inlineCode","value":"EXTERNAL-IP","position":{"start":{"line":73,"column":158,"offset":3132},"end":{"line":73,"column":171,"offset":3145},"indent":[]}},{"type":"text","value":" attribute.","position":{"start":{"line":73,"column":171,"offset":3145},"end":{"line":73,"column":182,"offset":3156},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2975},"end":{"line":73,"column":182,"offset":3156},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubectl get svc\n\n    NAME                        TYPE           CLUSTER-IP     EXTERNAL-IP     PORT(S)                      AGE\n    kubernetes                  ClusterIP      10.0.0.1       <none>          443/TCP                      36h\n--> traefik                     LoadBalancer   10.0.27.93     40.114.168.96   443:31623/TCP,80:31804/TCP   35h\n    traefik-dashboard           NodePort       10.0.252.6     <none>          80:31146/TCP                 35h","position":{"start":{"line":75,"column":1,"offset":3158},"end":{"line":80,"column":115,"offset":3638},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Go to your DNS provider and link the domain you've configured in the first step ","position":{"start":{"line":82,"column":1,"offset":3640},"end":{"line":82,"column":81,"offset":3720},"indent":[]}},{"type":"inlineCode","value":"traefik.domain.com","position":{"start":{"line":82,"column":81,"offset":3720},"end":{"line":82,"column":101,"offset":3740},"indent":[]}},{"type":"text","value":" to the IP address of the ","position":{"start":{"line":82,"column":101,"offset":3740},"end":{"line":82,"column":127,"offset":3766},"indent":[]}},{"type":"inlineCode","value":"EXTERNAL-IP","position":{"start":{"line":82,"column":127,"offset":3766},"end":{"line":82,"column":140,"offset":3779},"indent":[]}},{"type":"text","value":" attribute.","position":{"start":{"line":82,"column":140,"offset":3779},"end":{"line":82,"column":151,"offset":3790},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3640},"end":{"line":82,"column":151,"offset":3790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When browsing to ","position":{"start":{"line":84,"column":1,"offset":3792},"end":{"line":84,"column":18,"offset":3809},"indent":[]}},{"type":"inlineCode","value":"traefik.domain.com","position":{"start":{"line":84,"column":18,"offset":3809},"end":{"line":84,"column":38,"offset":3829},"indent":[]}},{"type":"text","value":", you should see the traefik dashboard showing up.","position":{"start":{"line":84,"column":38,"offset":3829},"end":{"line":84,"column":88,"offset":3879},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":3792},"end":{"line":84,"column":88,"offset":3879},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"MongoDB","position":{"start":{"line":86,"column":4,"offset":3884},"end":{"line":86,"column":11,"offset":3891},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":3881},"end":{"line":86,"column":11,"offset":3891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Kerberos Enterprise generates configurations for every surveillance camera that you want to monitor. These configuration files\nare stored centrally in a MongoDB database. Therefore we use Helm to install a MongoDB instance inside your cluster.","position":{"start":{"line":88,"column":1,"offset":3893},"end":{"line":89,"column":117,"offset":4136},"indent":[1]}}],"position":{"start":{"line":88,"column":1,"offset":3893},"end":{"line":89,"column":117,"offset":4136},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Have a look into the ","position":{"start":{"line":91,"column":1,"offset":4138},"end":{"line":91,"column":22,"offset":4159},"indent":[]}},{"type":"inlineCode","value":"yaml/mongodb/values.yaml","position":{"start":{"line":91,"column":22,"offset":4159},"end":{"line":91,"column":48,"offset":4185},"indent":[]}},{"type":"text","value":" file, you will find plenty of configurations for your MongoDB instance. You will also find the attribute where you can change the root password of mongodb. If using Helm version 2, write ","position":{"start":{"line":91,"column":48,"offset":4185},"end":{"line":91,"column":236,"offset":4373},"indent":[]}},{"type":"inlineCode","value":"--name mongodb","position":{"start":{"line":91,"column":236,"offset":4373},"end":{"line":91,"column":252,"offset":4389},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":91,"column":252,"offset":4389},"end":{"line":91,"column":253,"offset":4390},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":4138},"end":{"line":91,"column":253,"offset":4390},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"helm repo add bitnami https://charts.bitnami.com/bitnami\nhelm install mongodb bitnami/mongodb --values ./yaml/mongodb/values.yaml","position":{"start":{"line":93,"column":1,"offset":4392},"end":{"line":94,"column":77,"offset":4529},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Once installed succesfully the MongoDB instance, we should copy the password of the MongoDB instance. Once revealed copy the password, as we will need in the next steps.","position":{"start":{"line":96,"column":1,"offset":4531},"end":{"line":96,"column":170,"offset":4700},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":4531},"end":{"line":96,"column":170,"offset":4700},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"export MONGODB_ROOT_PASSWORD=$(kubectl get secret --namespace default mongodb -o jsonpath=\"{.data.mongodb-root-password}\" | base64 --decode)\necho $MONGODB_ROOT_PASSWORD","position":{"start":{"line":98,"column":1,"offset":4702},"end":{"line":99,"column":32,"offset":4878},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Factory","position":{"start":{"line":101,"column":4,"offset":4883},"end":{"line":101,"column":11,"offset":4890},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":4880},"end":{"line":101,"column":11,"offset":4890},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The last step is to install the factory service. Kerberos Enterprise is managed through an application which we call the ","position":{"start":{"line":103,"column":1,"offset":4892},"end":{"line":103,"column":122,"offset":5013},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Factory","position":{"start":{"line":103,"column":124,"offset":5015},"end":{"line":103,"column":131,"offset":5022},"indent":[]}}],"position":{"start":{"line":103,"column":122,"offset":5013},"end":{"line":103,"column":133,"offset":5024},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":103,"column":133,"offset":5024},"end":{"line":103,"column":134,"offset":5025},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":4892},"end":{"line":103,"column":134,"offset":5025},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Factory is responsible for initiating\nthe deployments inside your cluster. These deployments is what we also call (similar to the Open Source version) the machinery.","position":{"start":{"line":105,"column":1,"offset":5027},"end":{"line":106,"column":128,"offset":5196},"indent":[1]}}],"position":{"start":{"line":105,"column":1,"offset":5027},"end":{"line":106,"column":128,"offset":5196},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The Factory comes as a web interface which provides you with a tool to update your machineries easily, monitor them, etc. The Factory is the central portal for managing Kerberos Enterprise inside your cluster.","position":{"start":{"line":108,"column":1,"offset":5198},"end":{"line":108,"column":210,"offset":5407},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":5198},"end":{"line":108,"column":210,"offset":5407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Before installing the Factory service, open the ","position":{"start":{"line":110,"column":1,"offset":5409},"end":{"line":110,"column":49,"offset":5457},"indent":[]}},{"type":"inlineCode","value":"yaml/factory/kubernetes.yaml","position":{"start":{"line":110,"column":49,"offset":5457},"end":{"line":110,"column":79,"offset":5487},"indent":[]}},{"type":"text","value":" configuration file. At the bottom file you will find two endpoints, similar to the traefik config file. Update the domain names to your own domain, and add these to your DNS server (pointing to the same IP as the traefik EXTERNAL-IP).","position":{"start":{"line":110,"column":79,"offset":5487},"end":{"line":110,"column":314,"offset":5722},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":5409},"end":{"line":110,"column":314,"offset":5722},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"    spec:\n      rules:\n-->   - host: factory.domain.com\n        http:\n          paths:\n          - path: /\n            backend:\n              serviceName: factory\n              servicePort: 80\n-->   - host: api.factory.domain.com\n        http:\n          paths:\n          - path: /\n            backend:\n              serviceName: factory\n              servicePort: 8081","position":{"start":{"line":112,"column":1,"offset":5724},"end":{"line":127,"column":36,"offset":6156},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Modify the MongoDB credentials, and make sure they match the credentials of your MongoDB instance.","position":{"start":{"line":129,"column":1,"offset":6158},"end":{"line":129,"column":99,"offset":6256},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":6158},"end":{"line":129,"column":99,"offset":6256},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"    - name: MONGODB_USERNAME\n      value: \"root\"\n    - name: MONGODB_PASSWORD\n-->   value: \"xxxxxxxxxx\"","position":{"start":{"line":131,"column":1,"offset":6258},"end":{"line":134,"column":30,"offset":6377},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Once you have corrected the DNS names, install the Factory service inside your cluster.","position":{"start":{"line":136,"column":1,"offset":6379},"end":{"line":136,"column":88,"offset":6466},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":6379},"end":{"line":136,"column":88,"offset":6466},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubectl apply -f ./yaml/factory/deployment.yaml","position":{"start":{"line":138,"column":1,"offset":6468},"end":{"line":138,"column":52,"offset":6519},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Test out configuration","position":{"start":{"line":140,"column":4,"offset":6524},"end":{"line":140,"column":26,"offset":6546},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":6521},"end":{"line":140,"column":26,"offset":6546},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If everything worked out as expected, you should now have following services in your cluster:","position":{"start":{"line":142,"column":1,"offset":6548},"end":{"line":142,"column":94,"offset":6641},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":6548},"end":{"line":142,"column":94,"offset":6641},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"MongoDB","position":{"start":{"line":144,"column":5,"offset":6647},"end":{"line":144,"column":12,"offset":6654},"indent":[]}}],"position":{"start":{"line":144,"column":5,"offset":6647},"end":{"line":144,"column":12,"offset":6654},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":6643},"end":{"line":144,"column":12,"offset":6654},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Traefik","position":{"start":{"line":145,"column":5,"offset":6659},"end":{"line":145,"column":12,"offset":6666},"indent":[]}}],"position":{"start":{"line":145,"column":5,"offset":6659},"end":{"line":145,"column":12,"offset":6666},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":6655},"end":{"line":145,"column":12,"offset":6666},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Factory","position":{"start":{"line":146,"column":5,"offset":6671},"end":{"line":146,"column":12,"offset":6678},"indent":[]}}],"position":{"start":{"line":146,"column":5,"offset":6671},"end":{"line":146,"column":12,"offset":6678},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":6667},"end":{"line":146,"column":12,"offset":6678},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":6643},"end":{"line":146,"column":12,"offset":6678},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It should look like this.","position":{"start":{"line":148,"column":1,"offset":6680},"end":{"line":148,"column":26,"offset":6705},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":6680},"end":{"line":148,"column":26,"offset":6705},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"$ kubectl get pods\nNAME                              READY   STATUS    RESTARTS   AGE\nfactory-6f5c877d7c-hf77p          1/1     Running   0          2d11h\nmongodb-758d5c5ddd-qsfq9          1/1     Running   0          5m31s\ntraefik-7d566ccc47-mwslb          1/1     Running   0          4d12h","position":{"start":{"line":150,"column":1,"offset":6707},"end":{"line":154,"column":73,"offset":7019},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Access the system","position":{"start":{"line":156,"column":4,"offset":7024},"end":{"line":156,"column":21,"offset":7041},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":7021},"end":{"line":156,"column":21,"offset":7041},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once everything is configured correctly your cluster and DNS, you should be able to setup the Factory application. By navigating to the Factory domain ","position":{"start":{"line":158,"column":1,"offset":7043},"end":{"line":158,"column":152,"offset":7194},"indent":[]}},{"type":"inlineCode","value":"factory.domain.com","position":{"start":{"line":158,"column":152,"offset":7194},"end":{"line":158,"column":172,"offset":7214},"indent":[]}},{"type":"text","value":" in your browser you will see the Factory login page showing up.","position":{"start":{"line":158,"column":172,"offset":7214},"end":{"line":158,"column":236,"offset":7278},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":7043},"end":{"line":158,"column":236,"offset":7278},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"../../public/images/factory/kerberos-factory-loginpage.png","alt":"Factory","position":{"start":{"line":160,"column":1,"offset":7280},"end":{"line":160,"column":71,"offset":7350},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":7280},"end":{"line":160,"column":71,"offset":7350},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":163,"column":1,"offset":7353},"end":{"line":163,"column":31,"offset":7383},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":163,"column":31,"offset":7383}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport ReplaceVersion from \"../components/ReplaceVersion\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h1>\n    <p>{`Start by installing a Kubernetes cluster. This can be done on one of the hyperscalers (`}<strong parentName=\"p\">{`AWS`}</strong>{`, `}<strong parentName=\"p\">{`GCP`}</strong>{` or `}<strong parentName=\"p\">{`Azure`}</strong>{`),\ncloud providers (Digital Ocean, Scaleway, etc) or on-premise in your own private network.`}</p>\n    <br />\n    <div class='embed-container'><iframe src=\"https://player.vimeo.com/video/404813147\" width=\"640\" height=\"400\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen></iframe></div>\n    <br /><br />\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <p>{`Before setting up Kerberos Enterprise, some configuration needs to happen. First thing that we need to do is setting up the RBAC permissions (Role Based Access Control). We need to enable this to be able to query specific endpoints from the Kubernetes API. By default these endpoints are locked, so we need to unlock them.`}</p>\n    <br />\n    <div class='embed-container'><iframe src=\"https://player.vimeo.com/video/404767375\" width=\"640\" height=\"400\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen></iframe></div>\n    <br /><br />\n    <p>{`First clone the configrations from our Github repo.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`git clone https://github.com/kerberos-io/enterprise enterprise`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`cd enterprise`}</span></code></pre>\n    <p>{`Next go into the directory and execute the first Kubernetes configuration file `}<inlineCode parentName=\"p\">{`clusterrole.yaml`}</inlineCode>{`.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`kubectl create -f ./yaml/factory/clusterrole.yaml`}</span></code></pre>\n    <p>{`This will make several actions inside your cluster available. We need this to be able to create deployments from the factory web app.`}</p>\n    <h2 {...{\n      \"id\": \"helm\"\n    }}>{`Helm`}</h2>\n    <p>{`Next we will install a couple of dependencies which are required for Kerberos Enterprise. `}<a parentName=\"p\" {...{\n        \"href\": \"https://helm.sh/\"\n      }}><strong parentName=\"a\">{`Helm`}</strong></a>{` is a package manager for Kubernetes, it helps you setting up services more easily (this could be a MQTT broker, a database, etc).\nInstead of writing yaml files for every service we need, we use so called `}<strong parentName=\"p\">{`Charts`}</strong>{` (libraries), that you can reuse and configure the,\nwith the appropriate settings.`}</p>\n    <p>{`Use one of the preferred OS package managers to install the Helm client:`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`brew install helm`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`choco install kubernetes-helm`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`scoop install helm`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`gofish install helm`}</span></code></pre>\n    <h2 {...{\n      \"id\": \"traefik\"\n    }}>{`Traefik`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://containo.us/traefik/\"\n      }}><strong parentName=\"a\">{`Traefik`}</strong></a>{` is a reverse proxy and load balancer which allows you to\nexpose your deployments more easily. Kerberos uses Traefik to expose it's APIs more easily.`}</p>\n    <p>{`By executing following helm command, we will install traefik and link it to a specific DNS name. Open the traefik values file, `}<inlineCode parentName=\"p\">{`yaml/traefik/values.yaml`}</inlineCode>{`, and update the DNS name to your own domain.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    dashboard:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`      enabled: true`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`-->   domain: traefik.domain.com`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`      serviceType: NodePort`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    rbac:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`        enabled: true`}</span></code></pre>\n    <p>{`Add Helm repository and install traefik.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`helm repo add stable https://kubernetes-charts.storage.googleapis.com`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`helm install traefik -f ./yaml/traefik/values.yaml stable/traefik`}</span></code></pre>\n    <p>{`After installation you should have an IP attached to traefik service, look for it by executing the `}<inlineCode parentName=\"p\">{`get service`}</inlineCode>{` command. You will see the ip address in the `}<inlineCode parentName=\"p\">{`EXTERNAL-IP`}</inlineCode>{` attribute.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`kubectl get svc`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    NAME                        TYPE           CLUSTER-IP     EXTERNAL-IP     PORT(S)                      AGE`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    kubernetes                  ClusterIP      10.0.0.1       <none>          443/TCP                      36h`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`--> traefik                     LoadBalancer   10.0.27.93     40.114.168.96   443:31623/TCP,80:31804/TCP   35h`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    traefik-dashboard           NodePort       10.0.252.6     <none>          80:31146/TCP                 35h`}</span></code></pre>\n    <p>{`Go to your DNS provider and link the domain you've configured in the first step `}<inlineCode parentName=\"p\">{`traefik.domain.com`}</inlineCode>{` to the IP address of the `}<inlineCode parentName=\"p\">{`EXTERNAL-IP`}</inlineCode>{` attribute.`}</p>\n    <p>{`When browsing to `}<inlineCode parentName=\"p\">{`traefik.domain.com`}</inlineCode>{`, you should see the traefik dashboard showing up.`}</p>\n    <h2 {...{\n      \"id\": \"mongodb\"\n    }}>{`MongoDB`}</h2>\n    <p>{`Kerberos Enterprise generates configurations for every surveillance camera that you want to monitor. These configuration files\nare stored centrally in a MongoDB database. Therefore we use Helm to install a MongoDB instance inside your cluster.`}</p>\n    <p>{`Have a look into the `}<inlineCode parentName=\"p\">{`yaml/mongodb/values.yaml`}</inlineCode>{` file, you will find plenty of configurations for your MongoDB instance. You will also find the attribute where you can change the root password of mongodb. If using Helm version 2, write `}<inlineCode parentName=\"p\">{`--name mongodb`}</inlineCode>{`.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`helm repo add bitnami https://charts.bitnami.com/bitnami`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`helm install mongodb bitnami/mongodb --values ./yaml/mongodb/values.yaml`}</span></code></pre>\n    <p>{`Once installed succesfully the MongoDB instance, we should copy the password of the MongoDB instance. Once revealed copy the password, as we will need in the next steps.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`export MONGODB_ROOT_PASSWORD=$(kubectl get secret --namespace default mongodb -o jsonpath=\"{.data.mongodb-root-password}\" | base64 --decode)`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`echo $MONGODB_ROOT_PASSWORD`}</span></code></pre>\n    <h2 {...{\n      \"id\": \"factory\"\n    }}>{`Factory`}</h2>\n    <p>{`The last step is to install the factory service. Kerberos Enterprise is managed through an application which we call the `}<strong parentName=\"p\">{`Factory`}</strong>{`.`}</p>\n    <p>{`The Factory is responsible for initiating\nthe deployments inside your cluster. These deployments is what we also call (similar to the Open Source version) the machinery.`}</p>\n    <p>{`The Factory comes as a web interface which provides you with a tool to update your machineries easily, monitor them, etc. The Factory is the central portal for managing Kerberos Enterprise inside your cluster.`}</p>\n    <p>{`Before installing the Factory service, open the `}<inlineCode parentName=\"p\">{`yaml/factory/kubernetes.yaml`}</inlineCode>{` configuration file. At the bottom file you will find two endpoints, similar to the traefik config file. Update the domain names to your own domain, and add these to your DNS server (pointing to the same IP as the traefik EXTERNAL-IP).`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    spec:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`      rules:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`-->   - host: factory.domain.com`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`        http:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`          paths:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`          - path: /`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`            backend:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`              serviceName: factory`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`              servicePort: 80`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`-->   - host: api.factory.domain.com`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`        http:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`          paths:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`          - path: /`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`            backend:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`              serviceName: factory`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`              servicePort: 8081`}</span></code></pre>\n    <p>{`Modify the MongoDB credentials, and make sure they match the credentials of your MongoDB instance.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    - name: MONGODB_USERNAME`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`      value: \"root\"`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    - name: MONGODB_PASSWORD`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`-->   value: \"xxxxxxxxxx\"`}</span></code></pre>\n    <p>{`Once you have corrected the DNS names, install the Factory service inside your cluster.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`kubectl apply -f ./yaml/factory/deployment.yaml`}</span></code></pre>\n    <h2 {...{\n      \"id\": \"test-out-configuration\"\n    }}>{`Test out configuration`}</h2>\n    <p>{`If everything worked out as expected, you should now have following services in your cluster:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`MongoDB`}</li>\n      <li parentName=\"ul\">{`Traefik`}</li>\n      <li parentName=\"ul\">{`Factory`}</li>\n    </ul>\n    <p>{`It should look like this.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`$ kubectl get pods`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`NAME                              READY   STATUS    RESTARTS   AGE`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`factory-6f5c877d7c-hf77p          1/1     Running   0          2d11h`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`mongodb-758d5c5ddd-qsfq9          1/1     Running   0          5m31s`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`traefik-7d566ccc47-mwslb          1/1     Running   0          4d12h`}</span></code></pre>\n    <h2 {...{\n      \"id\": \"access-the-system\"\n    }}>{`Access the system`}</h2>\n    <p>{`Once everything is configured correctly your cluster and DNS, you should be able to setup the Factory application. By navigating to the Factory domain `}<inlineCode parentName=\"p\">{`factory.domain.com`}</inlineCode>{` in your browser you will see the Factory login page showing up.`}</p>\n    <p><img alt=\"Factory\" src={require(\"../../public/images/factory/kerberos-factory-loginpage.png\")} /></p>\n\n    <style {...{\n      \"className\": \"vscode-highlight-styles\"\n    }}>{`\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n`}</style>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}