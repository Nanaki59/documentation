{"expireTime":9007200842842243000,"key":"gatsby-plugin-mdx-entire-payload-b34dc2451d26a40200ded75d09d54590-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":125,"offset":126},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":128},"end":{"line":5,"column":29,"offset":156},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"First things first","position":{"start":{"line":8,"column":3,"offset":161},"end":{"line":8,"column":21,"offset":179},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":159},"end":{"line":8,"column":21,"offset":179},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Kerberos started as an Open Source project back in 2014. Our main goal was, and still is, to provide everyone in this world with a free, professional and complete video surveillance system, which they can install in a couple of minutes.\nKerberos was initially developed for the Raspberry Pi, due to this many of the tools we have been using are lightweight and fast (such as C++). Over the years we have found other ways to make Kerberos available, such as KiOS (our custom Linux), Docker and Kubernetes.","position":{"start":{"line":10,"column":1,"offset":181},"end":{"line":11,"column":268,"offset":685},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":181},"end":{"line":11,"column":268,"offset":685},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In this section we want to make clear what the Open Source version of Kerberos is about, and when you should be using it. What it can do, and what it can't do.","position":{"start":{"line":13,"column":1,"offset":687},"end":{"line":13,"column":160,"offset":846},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":687},"end":{"line":13,"column":160,"offset":846},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"License","position":{"start":{"line":15,"column":4,"offset":851},"end":{"line":15,"column":11,"offset":858},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":848},"end":{"line":15,"column":11,"offset":858},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Kerberos Open Source project is licensed with ","position":{"start":{"line":17,"column":1,"offset":860},"end":{"line":17,"column":51,"offset":910},"indent":[]}},{"type":"link","title":null,"url":"/opensource/license","children":[{"type":"text","value":"BY-NC-SA 4.0","position":{"start":{"line":17,"column":52,"offset":911},"end":{"line":17,"column":64,"offset":923},"indent":[]}}],"position":{"start":{"line":17,"column":51,"offset":910},"end":{"line":17,"column":86,"offset":945},"indent":[]}},{"type":"text","value":", this means that everyone can use Kerberos and modify if to their needs, in a non commercial activity.","position":{"start":{"line":17,"column":86,"offset":945},"end":{"line":17,"column":189,"offset":1048},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":860},"end":{"line":17,"column":189,"offset":1048},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"When using the Open Source version","position":{"start":{"line":20,"column":4,"offset":1054},"end":{"line":20,"column":38,"offset":1088},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1051},"end":{"line":20,"column":38,"offset":1088},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Kerberos Open Source is perfect for personal usage. It's great if you only have a couple of surveillance cameras to be managed. A Kerberos agent (e.g. on a Raspberry Pi or inside a Docker container) runs for each camera. Their are many different installation possibilities, please have a look at the ","position":{"start":{"line":22,"column":1,"offset":1090},"end":{"line":22,"column":301,"offset":1390},"indent":[]}},{"type":"link","title":null,"url":"/architectures","children":[{"type":"text","value":"architecture","position":{"start":{"line":22,"column":302,"offset":1391},"end":{"line":22,"column":314,"offset":1403},"indent":[]}}],"position":{"start":{"line":22,"column":301,"offset":1390},"end":{"line":22,"column":331,"offset":1420},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":22,"column":331,"offset":1420},"end":{"line":22,"column":335,"offset":1424},"indent":[]}},{"type":"link","title":null,"url":"/opensource/installation","children":[{"type":"text","value":"installation page","position":{"start":{"line":22,"column":336,"offset":1425},"end":{"line":22,"column":353,"offset":1442},"indent":[]}}],"position":{"start":{"line":22,"column":335,"offset":1424},"end":{"line":22,"column":380,"offset":1469},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":22,"column":380,"offset":1469},"end":{"line":22,"column":381,"offset":1470},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1090},"end":{"line":22,"column":381,"offset":1470},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Every Kerberos agent has it's own web interface (front-end) to review media recording, and processing engine (back-end) of a specific surveillance camera. The Open Source version doesn't come with a central overview of all recordings generated by your Kerberos agents. For this feature we highly recommend ","position":{"start":{"line":24,"column":1,"offset":1472},"end":{"line":24,"column":307,"offset":1778},"indent":[]}},{"type":"link","title":null,"url":"/cloud","children":[{"type":"text","value":"Kerberos cloud","position":{"start":{"line":24,"column":308,"offset":1779},"end":{"line":24,"column":322,"offset":1793},"indent":[]}}],"position":{"start":{"line":24,"column":307,"offset":1778},"end":{"line":24,"column":331,"offset":1802},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":24,"column":331,"offset":1802},"end":{"line":24,"column":332,"offset":1803},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1472},"end":{"line":24,"column":332,"offset":1803},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to manage more than 10 Kerberos agents, it's recommended to use ","position":{"start":{"line":26,"column":1,"offset":1805},"end":{"line":26,"column":77,"offset":1881},"indent":[]}},{"type":"link","title":null,"url":"/enterprise","children":[{"type":"text","value":"Kerberos Enterprise","position":{"start":{"line":26,"column":78,"offset":1882},"end":{"line":26,"column":97,"offset":1901},"indent":[]}}],"position":{"start":{"line":26,"column":77,"offset":1881},"end":{"line":26,"column":111,"offset":1915},"indent":[]}},{"type":"text","value":". This will help you to scale, support high availability and load balancing. Check out the ","position":{"start":{"line":26,"column":111,"offset":1915},"end":{"line":26,"column":202,"offset":2006},"indent":[]}},{"type":"link","title":null,"url":"/architectures","children":[{"type":"text","value":"architectures section","position":{"start":{"line":26,"column":203,"offset":2007},"end":{"line":26,"column":224,"offset":2028},"indent":[]}}],"position":{"start":{"line":26,"column":202,"offset":2006},"end":{"line":26,"column":241,"offset":2045},"indent":[]}},{"type":"text","value":" for a better understanding of when to use what.","position":{"start":{"line":26,"column":241,"offset":2045},"end":{"line":26,"column":289,"offset":2093},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1805},"end":{"line":26,"column":289,"offset":2093},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How to install","position":{"start":{"line":28,"column":4,"offset":2098},"end":{"line":28,"column":18,"offset":2112},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":2095},"end":{"line":28,"column":18,"offset":2112},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A Kerberos Open Source agent can be installed in different ways. Every installation method have their own advantages and disadvantages. Depending on the usecase you could choose one method over the other. Read more on the ","position":{"start":{"line":30,"column":1,"offset":2114},"end":{"line":30,"column":223,"offset":2336},"indent":[]}},{"type":"link","title":null,"url":"/opensource/installation","children":[{"type":"text","value":"installation section","position":{"start":{"line":30,"column":224,"offset":2337},"end":{"line":30,"column":244,"offset":2357},"indent":[]}}],"position":{"start":{"line":30,"column":223,"offset":2336},"end":{"line":30,"column":271,"offset":2384},"indent":[]}},{"type":"text","value":", to learn about the different installation methods.","position":{"start":{"line":30,"column":271,"offset":2384},"end":{"line":30,"column":323,"offset":2436},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":2114},"end":{"line":30,"column":323,"offset":2436},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"KiOS: You have a Raspberry Pi, and you only want to run the Kerberos agent on it.","position":{"start":{"line":32,"column":4,"offset":2441},"end":{"line":32,"column":85,"offset":2522},"indent":[]}}],"position":{"start":{"line":32,"column":4,"offset":2441},"end":{"line":32,"column":85,"offset":2522},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":2438},"end":{"line":32,"column":85,"offset":2522},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Raspbian: You have a Raspberry Pi, but you want other services running next to your Kerberos agent.","position":{"start":{"line":33,"column":4,"offset":2526},"end":{"line":33,"column":103,"offset":2625},"indent":[]}}],"position":{"start":{"line":33,"column":4,"offset":2526},"end":{"line":33,"column":103,"offset":2625},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":2523},"end":{"line":33,"column":103,"offset":2625},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Docker: You have a lot of IP cameras, and/or don't want to mess with dependencies.","position":{"start":{"line":34,"column":4,"offset":2629},"end":{"line":34,"column":86,"offset":2711},"indent":[]}}],"position":{"start":{"line":34,"column":4,"offset":2629},"end":{"line":34,"column":86,"offset":2711},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":2626},"end":{"line":34,"column":86,"offset":2711},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Generic: You want to develop/extend Kerberos Open Source with your own features, or you want to run the Kerberos agent  on a not supported OS/architecure.","position":{"start":{"line":35,"column":4,"offset":2715},"end":{"line":35,"column":158,"offset":2869},"indent":[]}}],"position":{"start":{"line":35,"column":4,"offset":2715},"end":{"line":35,"column":158,"offset":2869},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":2712},"end":{"line":35,"column":158,"offset":2869},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":2438},"end":{"line":35,"column":158,"offset":2869},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":38,"column":1,"offset":2872},"end":{"line":38,"column":31,"offset":2902},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":38,"column":31,"offset":2902}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"first-things-first\"\n    }}>{`First things first`}</h1>\n    <p>{`Kerberos started as an Open Source project back in 2014. Our main goal was, and still is, to provide everyone in this world with a free, professional and complete video surveillance system, which they can install in a couple of minutes.\nKerberos was initially developed for the Raspberry Pi, due to this many of the tools we have been using are lightweight and fast (such as C++). Over the years we have found other ways to make Kerberos available, such as KiOS (our custom Linux), Docker and Kubernetes.`}</p>\n    <p>{`In this section we want to make clear what the Open Source version of Kerberos is about, and when you should be using it. What it can do, and what it can't do.`}</p>\n    <h2 {...{\n      \"id\": \"license\"\n    }}>{`License`}</h2>\n    <p>{`The Kerberos Open Source project is licensed with `}<a parentName=\"p\" {...{\n        \"href\": \"/opensource/license\"\n      }}>{`BY-NC-SA 4.0`}</a>{`, this means that everyone can use Kerberos and modify if to their needs, in a non commercial activity.`}</p>\n    <h2 {...{\n      \"id\": \"when-using-the-open-source-version\"\n    }}>{`When using the Open Source version`}</h2>\n    <p>{`Kerberos Open Source is perfect for personal usage. It's great if you only have a couple of surveillance cameras to be managed. A Kerberos agent (e.g. on a Raspberry Pi or inside a Docker container) runs for each camera. Their are many different installation possibilities, please have a look at the `}<a parentName=\"p\" {...{\n        \"href\": \"/architectures\"\n      }}>{`architecture`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"/opensource/installation\"\n      }}>{`installation page`}</a>{`.`}</p>\n    <p>{`Every Kerberos agent has it's own web interface (front-end) to review media recording, and processing engine (back-end) of a specific surveillance camera. The Open Source version doesn't come with a central overview of all recordings generated by your Kerberos agents. For this feature we highly recommend `}<a parentName=\"p\" {...{\n        \"href\": \"/cloud\"\n      }}>{`Kerberos cloud`}</a>{`.`}</p>\n    <p>{`If you want to manage more than 10 Kerberos agents, it's recommended to use `}<a parentName=\"p\" {...{\n        \"href\": \"/enterprise\"\n      }}>{`Kerberos Enterprise`}</a>{`. This will help you to scale, support high availability and load balancing. Check out the `}<a parentName=\"p\" {...{\n        \"href\": \"/architectures\"\n      }}>{`architectures section`}</a>{` for a better understanding of when to use what.`}</p>\n    <h2 {...{\n      \"id\": \"how-to-install\"\n    }}>{`How to install`}</h2>\n    <p>{`A Kerberos Open Source agent can be installed in different ways. Every installation method have their own advantages and disadvantages. Depending on the usecase you could choose one method over the other. Read more on the `}<a parentName=\"p\" {...{\n        \"href\": \"/opensource/installation\"\n      }}>{`installation section`}</a>{`, to learn about the different installation methods.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`KiOS: You have a Raspberry Pi, and you only want to run the Kerberos agent on it.`}</li>\n      <li parentName=\"ol\">{`Raspbian: You have a Raspberry Pi, but you want other services running next to your Kerberos agent.`}</li>\n      <li parentName=\"ol\">{`Docker: You have a lot of IP cameras, and/or don't want to mess with dependencies.`}</li>\n      <li parentName=\"ol\">{`Generic: You want to develop/extend Kerberos Open Source with your own features, or you want to run the Kerberos agent  on a not supported OS/architecure.`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}