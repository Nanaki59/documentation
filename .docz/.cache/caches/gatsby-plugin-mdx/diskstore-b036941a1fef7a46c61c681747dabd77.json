{"expireTime":9007200861601710000,"key":"gatsby-plugin-mdx-entire-payload-fe39793aea1bc6544960af1aa46c0348-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":125,"offset":126},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":128},"end":{"line":5,"column":29,"offset":156},"indent":[]}},{"type":"import","value":"import ReplaceVersion from \"../components/ReplaceVersion\";","position":{"start":{"line":8,"column":1,"offset":159},"end":{"line":8,"column":59,"offset":217},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Introduction","position":{"start":{"line":10,"column":3,"offset":221},"end":{"line":10,"column":15,"offset":233},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":219},"end":{"line":10,"column":15,"offset":233},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Welcome to the Kerberos Enterprise edge installation. This is the way to go if you want to install Kerberos Enterprise on your Baremetal infrastructure or inside your Private Cloud.","position":{"start":{"line":12,"column":1,"offset":235},"end":{"line":12,"column":182,"offset":416},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":235},"end":{"line":12,"column":182,"offset":416},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"../../public/images/kerberos-agent-architecture-kubernetes.png","alt":"architecture kubernetes","position":{"start":{"line":14,"column":1,"offset":418},"end":{"line":14,"column":91,"offset":508},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":418},"end":{"line":14,"column":91,"offset":508},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Before we can actual start installing the different deployments in our cluster, we need to make sure we have one available.","position":{"start":{"line":16,"column":1,"offset":510},"end":{"line":16,"column":124,"offset":633},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":510},"end":{"line":16,"column":124,"offset":633},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Docker","position":{"start":{"line":18,"column":3,"offset":637},"end":{"line":18,"column":9,"offset":643},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":635},"end":{"line":18,"column":9,"offset":643},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you have a fresh Linux installation, make sure you have Docker installed. If not the case, this is how you can install it on a Ubuntu OSS.","position":{"start":{"line":20,"column":1,"offset":645},"end":{"line":20,"column":142,"offset":786},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":645},"end":{"line":20,"column":142,"offset":786},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"apt install docker.io -y","position":{"start":{"line":22,"column":1,"offset":788},"end":{"line":22,"column":29,"offset":816},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Kubernetes","position":{"start":{"line":24,"column":3,"offset":820},"end":{"line":24,"column":13,"offset":830},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":818},"end":{"line":24,"column":13,"offset":830},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After Docker being installed go ahead and install the different Kubernetes servicess and tools.","position":{"start":{"line":26,"column":1,"offset":832},"end":{"line":26,"column":96,"offset":927},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":832},"end":{"line":26,"column":96,"offset":927},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"apt update -y\napt install apt-transport-https curl -y\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add\napt-add-repository \"deb http://apt.kubernetes.io/ kubernetes-xenial main\"\napt update -y && apt install kubeadm kubelet kubectl kubernetes-cni -y","position":{"start":{"line":28,"column":1,"offset":929},"end":{"line":32,"column":75,"offset":1223},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Make sure you disable swap, this is required by Kubernetes.","position":{"start":{"line":34,"column":1,"offset":1225},"end":{"line":34,"column":60,"offset":1284},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1225},"end":{"line":34,"column":60,"offset":1284},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"swapoff -a","position":{"start":{"line":36,"column":1,"offset":1286},"end":{"line":36,"column":15,"offset":1300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"And if you want to make it permanent after every boot.","position":{"start":{"line":38,"column":1,"offset":1302},"end":{"line":38,"column":55,"offset":1356},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1302},"end":{"line":38,"column":55,"offset":1356},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"sudo sed -i.bak '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab","position":{"start":{"line":40,"column":1,"offset":1358},"end":{"line":40,"column":59,"offset":1416},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Cleanup","position":{"start":{"line":42,"column":3,"offset":1420},"end":{"line":42,"column":10,"offset":1427},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1418},"end":{"line":42,"column":10,"offset":1427},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubeadm reset\n  rm -rf $HOME/.kube","position":{"start":{"line":44,"column":1,"offset":1429},"end":{"line":45,"column":21,"offset":1465},"indent":[1]}}],"position":{"start":{"line":44,"column":1,"offset":1429},"end":{"line":45,"column":21,"offset":1465},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Installation","position":{"start":{"line":47,"column":3,"offset":1469},"end":{"line":47,"column":15,"offset":1481},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1467},"end":{"line":47,"column":15,"offset":1481},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubeadm init","position":{"start":{"line":49,"column":1,"offset":1483},"end":{"line":49,"column":15,"offset":1497},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1483},"end":{"line":49,"column":15,"offset":1497},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  Your Kubernetes control-plane has initialized successfully!\n\n  To start using your cluster, you need to run the following as a regular user:\n\n    mkdir -p $HOME/.kube\n    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n    sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\n  You should now deploy a pod network to the cluster.\n  Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n    https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\n  Then you can join any number of worker nodes by running the following on each as root:\n\n  kubeadm join 192.168.1.103:6443 --token ej7ckt.uof7o2iplqf0r2up \\\n      --discovery-token-ca-cert-hash sha256:9cbcc00d34be2dbd605174802d9e52fbcdd617324c237bf58767b369fa586209","position":{"start":{"line":51,"column":1,"offset":1499},"end":{"line":66,"column":113,"offset":2296},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  mkdir -p $HOME/.kube\n  cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  chown $(id -u):$(id -g) $HOME/.kube/config","position":{"start":{"line":68,"column":1,"offset":2298},"end":{"line":70,"column":45,"offset":2419},"indent":[1,1]}}],"position":{"start":{"line":68,"column":1,"offset":2298},"end":{"line":70,"column":45,"offset":2419},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Untaint all nodess","position":{"start":{"line":73,"column":3,"offset":2424},"end":{"line":73,"column":21,"offset":2442},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2422},"end":{"line":73,"column":21,"offset":2442},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl taint nodes --all node-role.kubernetes.io/master-","position":{"start":{"line":75,"column":1,"offset":2444},"end":{"line":75,"column":60,"offset":2503},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2444},"end":{"line":75,"column":60,"offset":2503},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Calico","position":{"start":{"line":77,"column":3,"offset":2507},"end":{"line":77,"column":9,"offset":2513},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2505},"end":{"line":77,"column":9,"offset":2513},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  curl ","position":{"start":{"line":79,"column":1,"offset":2515},"end":{"line":79,"column":8,"offset":2522},"indent":[]}},{"type":"link","title":null,"url":"https://docs.projectcalico.org/manifests/calico.yaml","children":[{"type":"text","value":"https://docs.projectcalico.org/manifests/calico.yaml","position":{"start":{"line":79,"column":8,"offset":2522},"end":{"line":79,"column":60,"offset":2574},"indent":[]}}],"position":{"start":{"line":79,"column":8,"offset":2522},"end":{"line":79,"column":60,"offset":2574},"indent":[]}},{"type":"text","value":" -O\n  kubectl apply -f calico.yaml","position":{"start":{"line":79,"column":60,"offset":2574},"end":{"line":80,"column":31,"offset":2608},"indent":[1]}}],"position":{"start":{"line":79,"column":1,"offset":2515},"end":{"line":80,"column":31,"offset":2608},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Download Kerberos Enterprise configuration","position":{"start":{"line":82,"column":3,"offset":2612},"end":{"line":82,"column":45,"offset":2654},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2610},"end":{"line":82,"column":45,"offset":2654},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  git clone ","position":{"start":{"line":84,"column":1,"offset":2656},"end":{"line":84,"column":13,"offset":2668},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/kerberos-io/enterprise","children":[{"type":"text","value":"https://github.com/kerberos-io/enterprise","position":{"start":{"line":84,"column":13,"offset":2668},"end":{"line":84,"column":54,"offset":2709},"indent":[]}}],"position":{"start":{"line":84,"column":13,"offset":2668},"end":{"line":84,"column":54,"offset":2709},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2656},"end":{"line":84,"column":54,"offset":2709},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Install metallb (","position":{"start":{"line":86,"column":3,"offset":2713},"end":{"line":86,"column":20,"offset":2730},"indent":[]}},{"type":"link","title":null,"url":"https://metallb.universe.tf/installation/","children":[{"type":"text","value":"https://metallb.universe.tf/installation/","position":{"start":{"line":86,"column":20,"offset":2730},"end":{"line":86,"column":61,"offset":2771},"indent":[]}}],"position":{"start":{"line":86,"column":20,"offset":2730},"end":{"line":86,"column":61,"offset":2771},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":86,"column":61,"offset":2771},"end":{"line":86,"column":62,"offset":2772},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2711},"end":{"line":86,"column":62,"offset":2772},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl apply -f ","position":{"start":{"line":88,"column":1,"offset":2774},"end":{"line":88,"column":20,"offset":2793},"indent":[]}},{"type":"link","title":null,"url":"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml","children":[{"type":"text","value":"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml","position":{"start":{"line":88,"column":20,"offset":2793},"end":{"line":88,"column":101,"offset":2874},"indent":[]}}],"position":{"start":{"line":88,"column":20,"offset":2793},"end":{"line":88,"column":101,"offset":2874},"indent":[]}},{"type":"text","value":"\n  kubectl apply -f ","position":{"start":{"line":88,"column":101,"offset":2874},"end":{"line":89,"column":20,"offset":2894},"indent":[1]}},{"type":"link","title":null,"url":"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml","children":[{"type":"text","value":"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml","position":{"start":{"line":89,"column":20,"offset":2894},"end":{"line":89,"column":99,"offset":2973},"indent":[]}}],"position":{"start":{"line":89,"column":20,"offset":2894},"end":{"line":89,"column":99,"offset":2973},"indent":[]}},{"type":"text","value":"\n  kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=\"$(openssl rand -base64 128)\"","position":{"start":{"line":89,"column":99,"offset":2973},"end":{"line":90,"column":116,"offset":3089},"indent":[1]}}],"position":{"start":{"line":88,"column":1,"offset":2774},"end":{"line":90,"column":116,"offset":3089},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl apply -f ./enterprise/yaml/metallb/configmap.yaml","position":{"start":{"line":92,"column":1,"offset":3091},"end":{"line":92,"column":60,"offset":3150},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3091},"end":{"line":92,"column":60,"offset":3150},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup helm","position":{"start":{"line":94,"column":3,"offset":3154},"end":{"line":94,"column":13,"offset":3164},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3152},"end":{"line":94,"column":13,"offset":3164},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  curl -fsSL -o get_helm.sh ","position":{"start":{"line":96,"column":1,"offset":3166},"end":{"line":96,"column":29,"offset":3194},"indent":[]}},{"type":"link","title":null,"url":"https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3","children":[{"type":"text","value":"https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3","position":{"start":{"line":96,"column":29,"offset":3194},"end":{"line":96,"column":98,"offset":3263},"indent":[]}}],"position":{"start":{"line":96,"column":29,"offset":3194},"end":{"line":96,"column":98,"offset":3263},"indent":[]}},{"type":"text","value":"\n  chmod 700 get_helm.sh\n  ./get_helm.sh","position":{"start":{"line":96,"column":98,"offset":3263},"end":{"line":98,"column":16,"offset":3303},"indent":[1,1]}}],"position":{"start":{"line":96,"column":1,"offset":3166},"end":{"line":98,"column":16,"offset":3303},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup traefik","position":{"start":{"line":100,"column":3,"offset":3307},"end":{"line":100,"column":16,"offset":3320},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3305},"end":{"line":100,"column":16,"offset":3320},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  helm repo add stable ","position":{"start":{"line":102,"column":1,"offset":3322},"end":{"line":102,"column":24,"offset":3345},"indent":[]}},{"type":"link","title":null,"url":"https://charts.helm.sh/stable","children":[{"type":"text","value":"https://charts.helm.sh/stable","position":{"start":{"line":102,"column":24,"offset":3345},"end":{"line":102,"column":53,"offset":3374},"indent":[]}}],"position":{"start":{"line":102,"column":24,"offset":3345},"end":{"line":102,"column":53,"offset":3374},"indent":[]}},{"type":"text","value":"\n  helm install traefik -f ./enterprise/yaml/traefik/values.yaml stable/traefik","position":{"start":{"line":102,"column":53,"offset":3374},"end":{"line":103,"column":79,"offset":3453},"indent":[1]}}],"position":{"start":{"line":102,"column":1,"offset":3322},"end":{"line":103,"column":79,"offset":3453},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup mongoDB","position":{"start":{"line":105,"column":3,"offset":3457},"end":{"line":105,"column":16,"offset":3470},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3455},"end":{"line":105,"column":16,"offset":3470},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  mkdir /home/mongodb/\n  kubectl create -f ./enterprise/yaml/mongodb/volume.yaml","position":{"start":{"line":107,"column":1,"offset":3472},"end":{"line":108,"column":58,"offset":3552},"indent":[1]}}],"position":{"start":{"line":107,"column":1,"offset":3472},"end":{"line":108,"column":58,"offset":3552},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"  helm repo add bitnami ","position":{"start":{"line":110,"column":1,"offset":3554},"end":{"line":110,"column":25,"offset":3578},"indent":[]}},{"type":"link","title":null,"url":"https://charts.bitnami.com/bitnami","children":[{"type":"text","value":"https://charts.bitnami.com/bitnami","position":{"start":{"line":110,"column":25,"offset":3578},"end":{"line":110,"column":59,"offset":3612},"indent":[]}}],"position":{"start":{"line":110,"column":25,"offset":3578},"end":{"line":110,"column":59,"offset":3612},"indent":[]}},{"type":"text","value":"\n  helm install mongodb bitnami/mongodb --values ./enterprise/yaml/mongodb/values.yaml\n  export MONGODB_ROOT_PASSWORD=$(kubectl get secret --namespace default mongodb -o jsonpath=\"{.data.mongodb-root-password}\" | base64 --decode)\n  echo $MONGODB_ROOT_PASSWORD","position":{"start":{"line":110,"column":59,"offset":3612},"end":{"line":113,"column":30,"offset":3871},"indent":[1,1,1]}}],"position":{"start":{"line":110,"column":1,"offset":3554},"end":{"line":113,"column":30,"offset":3871},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup Kerberos Enterprise","position":{"start":{"line":115,"column":3,"offset":3875},"end":{"line":115,"column":28,"offset":3900},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":3873},"end":{"line":115,"column":28,"offset":3900},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl apply -f ./enterprise/yaml/factory/clusterrole.yaml\n  kubectl apply -f ./enterprise/yaml/factory/deployment.yaml","position":{"start":{"line":117,"column":1,"offset":3902},"end":{"line":118,"column":61,"offset":4024},"indent":[1]}}],"position":{"start":{"line":117,"column":1,"offset":3902},"end":{"line":118,"column":61,"offset":4024},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup Kerberos Storage","position":{"start":{"line":120,"column":3,"offset":4028},"end":{"line":120,"column":25,"offset":4050},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":4026},"end":{"line":120,"column":25,"offset":4050},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  git clone ","position":{"start":{"line":122,"column":1,"offset":4052},"end":{"line":122,"column":13,"offset":4064},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/kerberos-io/storage","children":[{"type":"text","value":"https://github.com/kerberos-io/storage","position":{"start":{"line":122,"column":13,"offset":4064},"end":{"line":122,"column":51,"offset":4102},"indent":[]}}],"position":{"start":{"line":122,"column":13,"offset":4064},"end":{"line":122,"column":51,"offset":4102},"indent":[]}},{"type":"text","value":"\n  kubectl apply -f ./storage/yaml/deployment.yaml","position":{"start":{"line":122,"column":51,"offset":4102},"end":{"line":123,"column":50,"offset":4152},"indent":[1]}}],"position":{"start":{"line":122,"column":1,"offset":4052},"end":{"line":123,"column":50,"offset":4152},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup Minio","position":{"start":{"line":125,"column":3,"offset":4156},"end":{"line":125,"column":14,"offset":4167},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":4154},"end":{"line":125,"column":14,"offset":4167},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl create -f ./storage/yaml/minio/volume.yaml\n  kubectl create -f ./storage/yaml/minio/pvc.yaml\n  kubectl create -f ./storage/yaml/minio/svc.yaml\n  kubectl create -f ./storage/yaml/minio/deployment.yaml","position":{"start":{"line":127,"column":1,"offset":4169},"end":{"line":130,"column":57,"offset":4378},"indent":[1,1,1]}}],"position":{"start":{"line":127,"column":1,"offset":4169},"end":{"line":130,"column":57,"offset":4378},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setup Kerberos Storage Cleanup","position":{"start":{"line":132,"column":3,"offset":4382},"end":{"line":132,"column":33,"offset":4412},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4380},"end":{"line":132,"column":33,"offset":4412},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  kubectl apply -f ./storage/yaml/deployment-cleanup.yaml","position":{"start":{"line":134,"column":1,"offset":4414},"end":{"line":134,"column":58,"offset":4471},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4414},"end":{"line":134,"column":58,"offset":4471},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":137,"column":1,"offset":4474},"end":{"line":137,"column":31,"offset":4504},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":137,"column":31,"offset":4504}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/i353408/Vagrant/www/repos/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport ReplaceVersion from \"../components/ReplaceVersion\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h1>\n    <p>{`Welcome to the Kerberos Enterprise edge installation. This is the way to go if you want to install Kerberos Enterprise on your Baremetal infrastructure or inside your Private Cloud.`}</p>\n    <p><img alt=\"architecture kubernetes\" src={require(\"../../public/images/kerberos-agent-architecture-kubernetes.png\")} /></p>\n    <p>{`Before we can actual start installing the different deployments in our cluster, we need to make sure we have one available.`}</p>\n    <h1 {...{\n      \"id\": \"docker\"\n    }}>{`Docker`}</h1>\n    <p>{`If you have a fresh Linux installation, make sure you have Docker installed. If not the case, this is how you can install it on a Ubuntu OSS.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`apt install docker.io -y`}</span></code></pre>\n    <h1 {...{\n      \"id\": \"kubernetes\"\n    }}>{`Kubernetes`}</h1>\n    <p>{`After Docker being installed go ahead and install the different Kubernetes servicess and tools.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`apt update -y`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`apt install apt-transport-https curl -y`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`apt-add-repository \"deb http://apt.kubernetes.io/ kubernetes-xenial main\"`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`apt update -y && apt install kubeadm kubelet kubectl kubernetes-cni -y`}</span></code></pre>\n    <p>{`Make sure you disable swap, this is required by Kubernetes.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`swapoff -a`}</span></code></pre>\n    <p>{`And if you want to make it permanent after every boot.`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`sudo sed -i.bak '/ swap / s/^\\\\(.*\\\\)$/#\\\\1/g' /etc/fstab`}</span></code></pre>\n    <h1 {...{\n      \"id\": \"cleanup\"\n    }}>{`Cleanup`}</h1>\n    <p>{`  kubeadm reset\nrm -rf $HOME/.kube`}</p>\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <p>{`  kubeadm init`}</p>\n    <pre {...{\n      \"className\": \"default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  Your Kubernetes control-plane has initialized successfully!`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  To start using your cluster, you need to run the following as a regular user:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    mkdir -p $HOME/.kube`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    sudo chown $(id -u):$(id -g) $HOME/.kube/config`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  You should now deploy a pod network to the cluster.`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    https://kubernetes.io/docs/concepts/cluster-administration/addons/`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  Then you can join any number of worker nodes by running the following on each as root:`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`  kubeadm join 192.168.1.103:6443 --token ej7ckt.uof7o2iplqf0r2up \\\\`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`      --discovery-token-ca-cert-hash sha256:9cbcc00d34be2dbd605174802d9e52fbcdd617324c237bf58767b369fa586209`}</span></code></pre>\n    <p>{`  mkdir -p $HOME/.kube\ncp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nchown $(id -u):$(id -g) $HOME/.kube/config`}</p>\n    <h1 {...{\n      \"id\": \"untaint-all-nodess\"\n    }}>{`Untaint all nodess`}</h1>\n    <p>{`  kubectl taint nodes --all node-role.kubernetes.io/master-`}</p>\n    <h1 {...{\n      \"id\": \"calico\"\n    }}>{`Calico`}</h1>\n    <p>{`  curl `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.projectcalico.org/manifests/calico.yaml\"\n      }}>{`https://docs.projectcalico.org/manifests/calico.yaml`}</a>{` -O\nkubectl apply -f calico.yaml`}</p>\n    <h1 {...{\n      \"id\": \"download-kerberos-enterprise-configuration\"\n    }}>{`Download Kerberos Enterprise configuration`}</h1>\n    <p>{`  git clone `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kerberos-io/enterprise\"\n      }}>{`https://github.com/kerberos-io/enterprise`}</a></p>\n    <h1 {...{\n      \"id\": \"install-metallb-httpsmetallbuniversetfinstallation\"\n    }}>{`Install metallb (`}<a parentName=\"h1\" {...{\n        \"href\": \"https://metallb.universe.tf/installation/\"\n      }}>{`https://metallb.universe.tf/installation/`}</a>{`)`}</h1>\n    <p>{`  kubectl apply -f `}<a parentName=\"p\" {...{\n        \"href\": \"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml\"\n      }}>{`https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml`}</a>{`\nkubectl apply -f `}<a parentName=\"p\" {...{\n        \"href\": \"https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml\"\n      }}>{`https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml`}</a>{`\nkubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=\"$(openssl rand -base64 128)\"`}</p>\n    <p>{`  kubectl apply -f ./enterprise/yaml/metallb/configmap.yaml`}</p>\n    <h1 {...{\n      \"id\": \"setup-helm\"\n    }}>{`Setup helm`}</h1>\n    <p>{`  curl -fsSL -o get_helm.sh `}<a parentName=\"p\" {...{\n        \"href\": \"https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3\"\n      }}>{`https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3`}</a>{`\nchmod 700 get_helm.sh\n./get_helm.sh`}</p>\n    <h1 {...{\n      \"id\": \"setup-traefik\"\n    }}>{`Setup traefik`}</h1>\n    <p>{`  helm repo add stable `}<a parentName=\"p\" {...{\n        \"href\": \"https://charts.helm.sh/stable\"\n      }}>{`https://charts.helm.sh/stable`}</a>{`\nhelm install traefik -f ./enterprise/yaml/traefik/values.yaml stable/traefik`}</p>\n    <h1 {...{\n      \"id\": \"setup-mongodb\"\n    }}>{`Setup mongoDB`}</h1>\n    <p>{`  mkdir /home/mongodb/\nkubectl create -f ./enterprise/yaml/mongodb/volume.yaml`}</p>\n    <p>{`  helm repo add bitnami `}<a parentName=\"p\" {...{\n        \"href\": \"https://charts.bitnami.com/bitnami\"\n      }}>{`https://charts.bitnami.com/bitnami`}</a>{`\nhelm install mongodb bitnami/mongodb --values ./enterprise/yaml/mongodb/values.yaml\nexport MONGODB_ROOT_PASSWORD=$(kubectl get secret --namespace default mongodb -o jsonpath=\"{.data.mongodb-root-password}\" | base64 --decode)\necho $MONGODB_ROOT_PASSWORD`}</p>\n    <h1 {...{\n      \"id\": \"setup-kerberos-enterprise\"\n    }}>{`Setup Kerberos Enterprise`}</h1>\n    <p>{`  kubectl apply -f ./enterprise/yaml/factory/clusterrole.yaml\nkubectl apply -f ./enterprise/yaml/factory/deployment.yaml`}</p>\n    <h1 {...{\n      \"id\": \"setup-kerberos-storage\"\n    }}>{`Setup Kerberos Storage`}</h1>\n    <p>{`  git clone `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kerberos-io/storage\"\n      }}>{`https://github.com/kerberos-io/storage`}</a>{`\nkubectl apply -f ./storage/yaml/deployment.yaml`}</p>\n    <h1 {...{\n      \"id\": \"setup-minio\"\n    }}>{`Setup Minio`}</h1>\n    <p>{`  kubectl create -f ./storage/yaml/minio/volume.yaml\nkubectl create -f ./storage/yaml/minio/pvc.yaml\nkubectl create -f ./storage/yaml/minio/svc.yaml\nkubectl create -f ./storage/yaml/minio/deployment.yaml`}</p>\n    <h1 {...{\n      \"id\": \"setup-kerberos-storage-cleanup\"\n    }}>{`Setup Kerberos Storage Cleanup`}</h1>\n    <p>{`  kubectl apply -f ./storage/yaml/deployment-cleanup.yaml`}</p>\n\n    <style {...{\n      \"className\": \"vscode-highlight-styles\"\n    }}>{`\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n`}</style>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}